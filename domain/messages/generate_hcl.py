import asyncio

from domain.b64.b64_encoder import decode_string_b64
from infrastructure.github import get_repo_contents


def generate_hcl_messages():
    # You can regenerate the messages by running the following code, which will download the sample
    # HCL from the OctopusTerraformExport repository and generate the messages.
    #
    # tests = asyncio.run(get_repo_contents("OctopusSolutionsEngineering", "OctopusTerraformExport", "test/terraform",
    #                                       github_token))
    #
    # sample_hcl = asyncio.run(get_all_file_content(tests, github_token, logging))
    #
    # # Don't go over the 128k context length limit
    # chars = 0
    # for hcl in sample_hcl:
    #     chars += len(hcl[1])
    #     if chars > max_chars_128:
    #         break
    #     messages.append(hcl)

    # The messages are hard coded to improve performance
    return [
        ('system', 'You are methodical agent who understands Terraform modules defining Octopus Deploy resources.'),
        ('system',
         'The supplied HCL configuration files are examples of valid Terraform configuration files for the Octopus Terraform provider.'),
        ('system',
         'HCL: ###\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nresource "octopusdeploy_aws_account" "account_aws_account" {{\n  name                              = "AWS Account"\n  description                       = ""\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  access_key                        = "ABCDEFGHIJKLMNOPQRST"\n  secret_key                        = "secretgoeshere"\n}}\n\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nresource "octopusdeploy_azure_service_principal" "account_azure" {{\n  description                       = "Azure Account"\n  name                              = "Azure"\n  environments                      = [octopusdeploy_environment.test_environment.id]\n  tenants                           = [octopusdeploy_tenant.tenant_team_a.id]\n  tenanted_deployment_participation = "Tenanted"\n  application_id                    = "2eb8bd13-661e-489c-beb9-4103efb9dbdd"\n  password                          = "secretgoeshere"\n  subscription_id                   = "95bf77d2-64b1-4ed2-9de1-b5451e3881f5"\n  tenant_id                         = "18eb006b-c3c8-4a72-93cd-fe4b293f82ee"\n}}\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "blah_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Blah"\n  use_guided_failure           = false\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_tenant" "tenant_team_a" {{\n  name        = "Team A"\n  description = "Test tenant"\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_username_password_account" "account_gke" {{\n  description                       = "A test account"\n  name                              = "GKE"\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  username                          = "admin"\n  password                          = "secretgoeshere"\n}}\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_gcp_account" "account_google" {{\n  description                       = "A test account"\n  name                              = "Google"\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  json_key                          = "secretgoeshere"\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\n-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAQEAysnOUxc7KI+jHEG9EQ0AqB2YFEa9fzYjFNcZjcWpr2PFDsknh9JS\nmMV5ngekm4r4rUANmSgP1mYLj9LTt5EYkCw9GrCJZ6+eA93LJ0lFTjadXBnBsfnfFNQVbG\ngjwSZ8IgVCj2Iq4KXFfm/lmrpFP+bjkexuLppHyvJ6flYV6E0mwaYgySGMgKc/nmrZ164X\nJ1+I/S96L3EgNOHMfj8B39xHYCFTO6DCJKCpteGQkH0MDGjo8wuhRQzsB3TLluszdm16dY\nMzYvAIdwzfwo8uj1AHQNzwCbB0FdznqM8JKWfkC7EyUkeIxQvf/2FwVrKLDd/yjNORchkq\noj06w2IqZwAAA8iKKjOwiiozsAAAAAdzc2gtcnNhAAABAQDKyc5TFzsoj6McQb0RDQCoHZ\ngURr1/NiMU1xmNxamvY8UOySeH0lKYxXmeB6SbivitQA2ZKA/WZguP0tO3kRiQLD0asIln\nr54D3csnSUVONp1cGcGx+d8U1BVsaCPBJnwiBUKPYirgpcV+b+WaukU/5uOR7G4umkfK8n\np+VhXoTSbBpiDJIYyApz+eatnXrhcnX4j9L3ovcSA04cx+PwHf3EdgIVM7oMIkoKm14ZCQ\nfQwMaOjzC6FFDOwHdMuW6zN2bXp1gzNi8Ah3DN/Cjy6PUAdA3PAJsHQV3OeozwkpZ+QLsT\nJSR4jFC9//YXBWsosN3/KM05FyGSqiPTrDYipnAAAAAwEAAQAAAQEAwQg4jn+eoI2aBlvN\nTV3DMkR5b1OnLmCqJDxc5scxLvMZsWlpZ7CdTy8rBXLhDe7LqJ9AUnoAGWYpu05EmohTiW\nmTAMTrBvf0wllt+IeWoUz7naAm8POZlooLmpXG8yVfJEM9iJ85kX468JAzT4XgRWPTXCRi\n/Zl+nYETeQ8Y63ZRaMQ7ICf+aQElQzpXombvLX3TZ6csLxygq3kMZIsISITpI7cKlARtFn\nqlJF+B/bePBdgxHEZjd8CWCHGVQP8wgptwDkjOMO8vocxaZNOHYfppJPBNEc0EJngn7PWJ\n+1VRMfJQnRzenna7TwRQ++rVfvEZFhjjgRRO9F+k1FoIgQAAAIEAlQrmtbWetwteZVK/+8\nIBP6ds/LIkOozWE/VrLzpIAxq/WYEMmP+n0+WWudG5jOi1edBRaQgSJ0u4qpNI1qFa4HHV\ncj1/zszvxEKRDIaBBFiO5ct/ET/Q7pjz3NrZeWm+GeQBJCGbLHRNT43ViYYKTo6diFU2mx\nGXCe/1Qccj65YAAACBAPvhvh3od52f8HUVXj1x3e/VEzrOyYhN/TC3LmhGbtmtvt/BvIHq\nwqXZSOIVZFbFuJH+NDsVdQH7orQmUpbqFYCwB15FMDl45XKFm1b1rKW5zeP+wt3Xr3Ztqk\nFGeiIQ2IRfIAB6gxIo56FzgLRlzBpto8dNXc1xmYX2SdaovpJDAAAAgQDOGpTOh8AQ0Z1S\nsRooU/XE4dakkINo07G4b73MfhoqnEuOMK3FQU+QEe0ajouk9QMP5bseMBbrMeSMR0QYPB\nT8gFvKeHIczeKIN3OFDZEAxLFM0oKn4vngGMAmMu/kd06mOfrT44fQHuj7F5luARGz4paL\n/4BMEd2qSFqAc6z/DQAAAA1tYXR0aEBNYXR0aGV3AQIDBA==\n-----END OPENSSH PRIVATE KEY-----\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDKyc5TFzsoj6McQb0RDQCoHZgURr1/NiMU1xmNxamvY8UOySeH0lKYxXmeB6SbivitQA2ZKA/WZguP0tO3kRiQLD0asIlnr54D3csnSUVONp1cGcGx+d8U1BVsaCPBJnwiBUKPYirgpcV+b+WaukU/5uOR7G4umkfK8np+VhXoTSbBpiDJIYyApz+eatnXrhcnX4j9L3ovcSA04cx+PwHf3EdgIVM7oMIkoKm14ZCQfQwMaOjzC6FFDOwHdMuW6zN2bXp1gzNi8Ah3DN/Cjy6PUAdA3PAJsHQV3OeozwkpZ+QLsTJSR4jFC9//YXBWsosN3/KM05FyGSqiPTrDYipn matth@Matthew\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_ssh_key_account" "account_ssh" {{\n  description                       = "A test account"\n  name                              = "SSH"\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  private_key_file                  = "unused"\n  username                          = "admin"\n  # Because of https://github.com/OctopusDeployLabs/terraform-provider-octopusdeploy/issues/343\n  private_key_passphrase            = "LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0KYjNCbGJuTnphQzFyWlhrdGRqRUFBQUFBQkc1dmJtVUFBQUFFYm05dVpRQUFBQUFBQUFBQkFBQUJGd0FBQUFkemMyZ3RjbgpOaEFBQUFBd0VBQVFBQUFRRUF5c25PVXhjN0tJK2pIRUc5RVEwQXFCMllGRWE5ZnpZakZOY1pqY1dwcjJQRkRza25oOUpTCm1NVjVuZ2VrbTRyNHJVQU5tU2dQMW1ZTGo5TFR0NUVZa0N3OUdyQ0paNitlQTkzTEowbEZUamFkWEJuQnNmbmZGTlFWYkcKZ2p3U1o4SWdWQ2oySXE0S1hGZm0vbG1ycEZQK2Jqa2V4dUxwcEh5dko2ZmxZVjZFMG13YVlneVNHTWdLYy9ubXJaMTY0WApKMStJL1M5NkwzRWdOT0hNZmo4QjM5eEhZQ0ZUTzZEQ0pLQ3B0ZUdRa0gwTURHam84d3VoUlF6c0IzVExsdXN6ZG0xNmRZCk16WXZBSWR3emZ3bzh1ajFBSFFOendDYkIwRmR6bnFNOEpLV2ZrQzdFeVVrZUl4UXZmLzJGd1ZyS0xEZC95ak5PUmNoa3EKb2owNncySXFad0FBQThpS0tqT3dpaW96c0FBQUFBZHpjMmd0Y25OaEFBQUJBUURLeWM1VEZ6c29qNk1jUWIwUkRRQ29IWgpnVVJyMS9OaU1VMXhtTnhhbXZZOFVPeVNlSDBsS1l4WG1lQjZTYml2aXRRQTJaS0EvV1pndVAwdE8za1JpUUxEMGFzSWxuCnI1NEQzY3NuU1VWT05wMWNHY0d4K2Q4VTFCVnNhQ1BCSm53aUJVS1BZaXJncGNWK2IrV2F1a1UvNXVPUjdHNHVta2ZLOG4KcCtWaFhvVFNiQnBpREpJWXlBcHorZWF0blhyaGNuWDRqOUwzb3ZjU0EwNGN4K1B3SGYzRWRnSVZNN29NSWtvS20xNFpDUQpmUXdNYU9qekM2RkZET3dIZE11VzZ6TjJiWHAxZ3pOaThBaDNETi9Dank2UFVBZEEzUEFKc0hRVjNPZW96d2twWitRTHNUCkpTUjRqRkM5Ly9ZWEJXc29zTjMvS00wNUZ5R1NxaVBUckRZaXBuQUFBQUF3RUFBUUFBQVFFQXdRZzRqbitlb0kyYUJsdk4KVFYzRE1rUjViMU9uTG1DcUpEeGM1c2N4THZNWnNXbHBaN0NkVHk4ckJYTGhEZTdMcUo5QVVub0FHV1lwdTA1RW1vaFRpVwptVEFNVHJCdmYwd2xsdCtJZVdvVXo3bmFBbThQT1psb29MbXBYRzh5VmZKRU05aUo4NWtYNDY4SkF6VDRYZ1JXUFRYQ1JpCi9abCtuWUVUZVE4WTYzWlJhTVE3SUNmK2FRRWxRenBYb21idkxYM1RaNmNzTHh5Z3Eza01aSXNJU0lUcEk3Y0tsQVJ0Rm4KcWxKRitCL2JlUEJkZ3hIRVpqZDhDV0NIR1ZRUDh3Z3B0d0Rrak9NTzh2b2N4YVpOT0hZZnBwSlBCTkVjMEVKbmduN1BXSgorMVZSTWZKUW5SemVubmE3VHdSUSsrclZmdkVaRmhqamdSUk85RitrMUZvSWdRQUFBSUVBbFFybXRiV2V0d3RlWlZLLys4CklCUDZkcy9MSWtPb3pXRS9Wckx6cElBeHEvV1lFTW1QK24wK1dXdWRHNWpPaTFlZEJSYVFnU0owdTRxcE5JMXFGYTRISFYKY2oxL3pzenZ4RUtSRElhQkJGaU81Y3QvRVQvUTdwanozTnJaZVdtK0dlUUJKQ0diTEhSTlQ0M1ZpWVlLVG82ZGlGVTJteApHWENlLzFRY2NqNjVZQUFBQ0JBUHZodmgzb2Q1MmY4SFVWWGoxeDNlL1ZFenJPeVloTi9UQzNMbWhHYnRtdHZ0L0J2SUhxCndxWFpTT0lWWkZiRnVKSCtORHNWZFFIN29yUW1VcGJxRllDd0IxNUZNRGw0NVhLRm0xYjFyS1c1emVQK3d0M1hyM1p0cWsKRkdlaUlRMklSZklBQjZneElvNTZGemdMUmx6QnB0bzhkTlhjMXhtWVgyU2Rhb3ZwSkRBQUFBZ1FET0dwVE9oOEFRMFoxUwpzUm9vVS9YRTRkYWtrSU5vMDdHNGI3M01maG9xbkV1T01LM0ZRVStRRWUwYWpvdWs5UU1QNWJzZU1CYnJNZVNNUjBRWVBCClQ4Z0Z2S2VISWN6ZUtJTjNPRkRaRUF4TEZNMG9LbjR2bmdHTUFtTXUva2QwNm1PZnJUNDRmUUh1ajdGNWx1QVJHejRwYUwKLzRCTUVkMnFTRnFBYzZ6L0RRQUFBQTF0WVhSMGFFQk5ZWFIwYUdWM0FRSURCQT09Ci0tLS0tRU5EIE9QRU5TU0ggUFJJVkFURSBLRVktLS0tLQo="\n}}\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_token_account" "account_autopilot_service_account" {{\n  description                       = "A test account"\n  name                              = "Token"\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  token                             = "secretgoeshere"\n}}\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_helm_feed" "feed_helm" {{\n  name                                 = "Helm"\n  password                             = "password"\n  feed_uri                             = "https://charts.helm.sh/stable/"\n  username                             = "username"\n  package_acquisition_location_options = ["ExecutionTarget", "NotAcquired"]\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_docker_container_registry" "feed_docker" {{\n  name                                 = "Docker"\n  password                             = "password"\n  username                             = "username"\n  api_version                          = "v1"\n  feed_uri                             = "https://index.docker.io"\n  package_acquisition_location_options = ["ExecutionTarget", "NotAcquired"]\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_aws_elastic_container_registry" "feed_ecr" {{\n  name                                 = "ECR"\n  access_key                           = var.feed_ecr_access_key\n  secret_key                           = var.feed_ecr_secret_key\n  package_acquisition_location_options = ["ExecutionTarget", "NotAcquired"]\n  region                               = "us-east-1"\n}}\nvariable "feed_ecr_access_key" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The access key used for the ECR feed"\n}}\nvariable "feed_ecr_secret_key" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The secret key used for the ECR feed"\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_maven_feed" "feed_maven" {{\n  name                                 = "Maven"\n  feed_uri                             = "https://repo.maven.apache.org/maven2/"\n  username                             = "username"\n  password                             = "password"\n  package_acquisition_location_options = ["Server", "ExecutionTarget"]\n  download_attempts                    = 5\n  download_retry_backoff_seconds       = 10\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_nuget_feed" "feed_nuget" {{\n  name                                 = "Nuget"\n  feed_uri                             = "https://index.docker.io"\n  username                             = "username"\n  password                             = "password"\n  is_enhanced_mode                     = true\n  package_acquisition_location_options = ["Server", "ExecutionTarget"]\n  download_attempts                    = 5\n  download_retry_backoff_seconds       = 10\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_static_worker_pool" "workerpool_docker" {{\n  name        = "Docker"\n  description = "A test worker pool"\n  is_default  = false\n  sort_order  = 3\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n\n  jira_extension_settings {{\n    environment_type = "unmapped"\n  }}\n\n  jira_service_management_extension_settings {{\n    is_enabled = true\n  }}\n\n  servicenow_extension_settings {{\n    is_enabled = true\n  }}\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_lifecycle" "simple_lifecycle" {{\n  description = "A test lifecycle"\n  name        = "Simple"\n\n  release_retention_policy {{\n    quantity_to_keep    = 1\n\n    unit                = "Days"\n  }}\n\n  tentacle_retention_policy {{\n    quantity_to_keep    = 30\n\n    unit                = "Items"\n  }}\n\n  phase {{\n    automatic_deployment_targets = []\n    optional_deployment_targets  = [octopusdeploy_environment.development_environment.id]\n    name                         = octopusdeploy_environment.development_environment.name\n\n    release_retention_policy {{\n      quantity_to_keep    = 1\n\n      unit                = "Days"\n    }}\n\n    tentacle_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Items"\n    }}\n  }}\n\n  phase {{\n    automatic_deployment_targets = []\n    optional_deployment_targets  = [octopusdeploy_environment.test_environment.id]\n    name                         = octopusdeploy_environment.test_environment.name\n\n    release_retention_policy {{\n      quantity_to_keep    = 1\n\n      unit                = "Days"\n    }}\n\n    tentacle_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Items"\n    }}\n  }}\n\n  phase {{\n    automatic_deployment_targets = []\n    optional_deployment_targets  = [octopusdeploy_environment.production_environment.id]\n    name                         = octopusdeploy_environment.production_environment.name\n\n    release_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Days"\n    }}\n\n    tentacle_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Items"\n    }}\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_tag_set" "tagset_tag1" {{\n  name        = "tag1"\n  description = "Test tagset"\n  sort_order  = 0\n}}\n\nresource "octopusdeploy_tag" "tag_a" {{\n  name        = "a"\n  color       = "#333333"\n  description = "tag a"\n  sort_order  = 2\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag" "tag_b" {{\n  name        = "b"\n  color       = "#333333"\n  description = "tag b"\n  sort_order  = 3\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_library_variable_set" "octopus_library_variable_set" {{\n  name = "Test"\n  description = "Test variable set"\n}}\n\nresource "octopusdeploy_variable" "octopus_admin_api_key" {{\n  name = "Test.Variable"\n  type = "String"\n  description = "Test variable"\n  is_sensitive = false\n  is_editable = true\n  owner_id = octopusdeploy_library_variable_set.octopus_library_variable_set.id\n  value = "True"\n\n  prompt {{\n    description = "test description"\n    label       = "test label"\n    is_required = true\n    display_settings {{\n      control_type = "Select"\n      select_option {{\n        display_name = "hi"\n        value = "there"\n      }}\n    }}\n  }}\n}}\n\nresource "octopusdeploy_variable" "secret" {{\n  name = "Test.SecretVariable"\n  type = "Sensitive"\n  description = "Test variable"\n  is_sensitive = true\n  is_editable = true\n  owner_id = octopusdeploy_library_variable_set.octopus_library_variable_set.id\n  sensitive_value = "True"\n}}\n\nresource "octopusdeploy_variable" "tag_scoped" {{\n  depends_on = [octopusdeploy_tag.tag_a]\n\n  name         = "Test.TagScopedVariable"\n  type         = "String"\n  description  = "Test variable"\n  is_sensitive = false\n  is_editable  = true\n  owner_id     = octopusdeploy_library_variable_set.octopus_library_variable_set.id\n  value        = "True"\n\n  scope {{\n    tenant_tags = ["tag1/a"]\n  }}\n}}\n\nresource "octopusdeploy_library_variable_set" "octopus_library_variable_set2" {{\n  name = "Test2"\n  description = "Test variable set"\n}}\n\nresource "octopusdeploy_library_variable_set" "octopus_library_variable_set3" {{\n  name = "Test3"\n  description = "Test variable set"\n}}\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_docker_container_registry" "feed_docker" {{\n  name                                 = "Docker"\n  password                             = "password"\n  username                             = "username"\n  api_version                          = "v1"\n  feed_uri                             = "https://index.docker.io"\n  package_acquisition_location_options = ["ExecutionTarget", "NotAcquired"]\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_variable" "string_variable" {{\n  owner_id  = octopusdeploy_project.deploy_frontend_project.id\n  type      = "String"\n  name      = "Test"\n  value     = "PlainText"\n}}\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_deployment_process" "test" {{\n  project_id = octopusdeploy_project.deploy_frontend_project.id\n\n  step {{\n    condition           = "Success"\n    name                = "Get MySQL Host"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.KubernetesRunScript"\n      name                               = "Get MySQL Host"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = true\n      is_required                        = false\n      worker_pool_id                     = ""\n      properties                         = {{\n        "Octopus.Action.Script.ScriptBody" = "echo \\"hi\\""\n        "Octopus.Action.KubernetesContainers.Namespace" = ""\n        "OctopusUseBundledTooling" = "False"\n        "Octopus.Action.Script.ScriptSource" = "Inline"\n        "Octopus.Action.Script.Syntax" = "Bash"\n      }}\n\n      environments          = []\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n\n      package {{\n        name                      = "package1"\n        package_id                = "package1"\n        acquisition_location      = "Server"\n        extract_during_deployment = false\n        feed_id                   = octopusdeploy_docker_container_registry.feed_docker.id\n        properties                = {{ Extract = "True", Purpose = "", SelectionMode = "immediate" }}\n      }}\n\n      features = []\n    }}\n\n    properties   = {{}}\n    target_roles = ["eks"]\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nresource "octopusdeploy_channel" "backend_mainline" {{\n  name        = "Test"\n  project_id  = octopusdeploy_project.deploy_frontend_project.id\n  description = "Test channel"\n  depends_on  = [octopusdeploy_project.deploy_frontend_project, octopusdeploy_deployment_process.deploy_backend]\n  is_default  = true\n  rule {{\n    tag = "^$"\n    action_package {{\n      deployment_action = "Test"\n      package_reference = "test"\n    }}\n  }}\n}}\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_worker_pools" "workerpool_default" {{\n  name = "Default Worker Pool"\n  ids  = null\n  skip = 0\n  take = 1\n}}\n\ndata "octopusdeploy_feeds" "built_in_feed" {{\n  feed_type    = "BuiltIn"\n  ids          = null\n  partial_name = ""\n  skip         = 0\n  take         = 1\n}}\n\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_deployment_process" "deploy_backend" {{\n  project_id = octopusdeploy_project.deploy_frontend_project.id\n\n  step {{\n    condition           = "Success"\n    name                = "Test"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.AwsRunCloudFormation"\n      name                               = "Test"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = false\n      worker_pool_id                     = data.octopusdeploy_worker_pools.workerpool_default.worker_pools[0].id\n      properties                         = {{ "Octopus.Action.Aws.AssumeRole" = "False", "Octopus.Action.Aws.CloudFormation.Tags" = "[{{\\"key\\":\\"Environment\\",\\"value\\":\\"#{{Octopus.Environment.Name | Replace \\\\\\" .*\\\\\\" \\\\\\"\\\\\\"}}\\"}},{{\\"key\\":\\"DeploymentProject\\",\\"value\\":\\"API_Gateway\\"}}]", "Octopus.Action.Aws.CloudFormationStackName" = "OctopusBuilder-APIGateway-mcasperson-#{{Octopus.Environment.Name | Replace \\" .*\\" \\"\\" | ToLower}}", "Octopus.Action.Aws.CloudFormationTemplate" = "Resources:\\n  RestApi:\\n    Type: \'AWS::ApiGateway::RestApi\'\\n    Properties:\\n      Description: My API Gateway\\n      Name: Octopus Workflow Builder\\n      BinaryMediaTypes:\\n        - \'*/*\'\\n      EndpointConfiguration:\\n        Types:\\n          - REGIONAL\\n  Health:\\n    Type: \'AWS::ApiGateway::Resource\'\\n    Properties:\\n      RestApiId:\\n        Ref: RestApi\\n      ParentId:\\n        \'Fn::GetAtt\':\\n          - RestApi\\n          - RootResourceId\\n      PathPart: health\\n  Api:\\n    Type: \'AWS::ApiGateway::Resource\'\\n    Properties:\\n      RestApiId:\\n        Ref: RestApi\\n      ParentId:\\n        \'Fn::GetAtt\':\\n          - RestApi\\n          - RootResourceId\\n      PathPart: api\\n  Web:\\n    Type: \'AWS::ApiGateway::Resource\'\\n    Properties:\\n      RestApiId: !Ref RestApi\\n      ParentId: !GetAtt\\n        - RestApi\\n        - RootResourceId\\n      PathPart: \'{{proxy+}}\'\\nOutputs:\\n  RestApi:\\n    Description: The REST API\\n    Value: !Ref RestApi\\n  RootResourceId:\\n    Description: ID of the resource exposing the root resource id\\n    Value:\\n      \'Fn::GetAtt\':\\n        - RestApi\\n        - RootResourceId\\n  Health:\\n    Description: ID of the resource exposing the health endpoints\\n    Value: !Ref Health\\n  Api:\\n    Description: ID of the resource exposing the api endpoint\\n    Value: !Ref Api\\n  Web:\\n    Description: ID of the resource exposing the web app frontend\\n    Value: !Ref Web\\n", "Octopus.Action.Aws.CloudFormationTemplateParameters" = "[]", "Octopus.Action.Aws.CloudFormationTemplateParametersRaw" = "[]", "Octopus.Action.Aws.Region" = "ap-southeast-2", "Octopus.Action.Aws.TemplateSource" = "Inline", "Octopus.Action.Aws.WaitForCompletion" = "True", "Octopus.Action.AwsAccount.UseInstanceRole" = "False", "Octopus.Action.AwsAccount.Variable" = "AWS Account" }}\n      environments                       = []\n      excluded_environments              = []\n      channels                           = []\n      tenant_tags                        = []\n      features                           = []\n      package {{\n        name                      = "test"\n        package_id                = "test"\n        feed_id                   = data.octopusdeploy_feeds.built_in_feed.feeds[0].id\n        acquisition_location      = "Server"\n        extract_during_deployment = true\n      }}\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_tag_set" "tagset_tag1" {{\n  name        = "tag1"\n  description = "Test tagset"\n  sort_order  = 0\n}}\n\nresource "octopusdeploy_tag" "tag_a" {{\n  name        = "a"\n  color       = "#333333"\n  description = "tag a"\n  sort_order  = 2\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag" "tag_b" {{\n  name        = "b"\n  color       = "#333333"\n  description = "tag b"\n  sort_order  = 3\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_git_credential" "gitcredential_test" {{\n  description = "test git credential"\n  name        = "test"\n  type        = "UsernamePassword"\n  username    = "admin"\n  password    = "${{var.gitcredential_test}}"\n}}\nvariable "gitcredential_test" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The secret variable value associated with the git credential test"\n  default     = "Password01!"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\nresource "octopusdeploy_script_module" "library_variable_set_test2" {{\n  description = "Test script module"\n  name        = "Test2"\n\n  script {{\n    body   = "echo \\"hi\\""\n    syntax = "PowerShell"\n  }}\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Tenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_tag_set" "tagset_tag1" {{\n  name        = "type"\n  description = "Test tagset"\n  sort_order  = 0\n}}\n\nresource "octopusdeploy_tag" "tag_a" {{\n  name        = "a"\n  color       = "#333333"\n  description = "tag a"\n  sort_order  = 2\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag" "tag_b" {{\n  name        = "b"\n  color       = "#333333"\n  description = "tag b"\n  sort_order  = 3\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag" "tag_excluded" {{\n  name        = "excluded"\n  color       = "#333333"\n  description = "excluded"\n  sort_order  = 4\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag" "tag_ignore" {{\n  name        = "ignorethis"\n  color       = "#333333"\n  description = "ignore this"\n  sort_order  = 5\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tenant" "tenant_team_a" {{\n  name        = "Team A"\n  description = "Test tenant"\n  tenant_tags = ["type/a", "type/b", "type/ignorethis"]\n  depends_on  = [octopusdeploy_tag.tag_a, octopusdeploy_tag.tag_b, octopusdeploy_tag.tag_ignore]\n}}\n\nresource "octopusdeploy_tenant_project" "team_a_frontend"{{\n  environment_ids = [\n    octopusdeploy_environment.test_environment.id,\n    octopusdeploy_environment.development_environment.id,\n    octopusdeploy_environment.production_environment.id\n  ]\n  project_id = octopusdeploy_project.deploy_frontend_project.id\n  tenant_id = octopusdeploy_tenant.tenant_team_a.id\n}}\n\nresource "octopusdeploy_tenant" "tenant_excluded" {{\n  name        = "Excluded"\n  description = "Excluded tenant"\n  tenant_tags = ["type/excluded"]\n  depends_on  = [octopusdeploy_tag.tag_excluded]\n\n}}\n\nresource "octopusdeploy_tenant_project" "excluded_frontend" {{\n  environment_ids = [\n    octopusdeploy_environment.test_environment.id,\n    octopusdeploy_environment.development_environment.id,\n    octopusdeploy_environment.production_environment.id\n  ]\n  project_id = octopusdeploy_project.deploy_frontend_project.id\n  tenant_id = octopusdeploy_tenant.tenant_excluded.id\n}}\n###'),
        ('system',
         'HCL: ###\nresource "octopusdeploy_certificate" "certificate_kind_ca" {{\n  name                              = "Test"\n  certificate_data                  = "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"\n  password                          = "Password01!"\n  environments                      = []\n  notes                             = "A test certificate"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n}}\n\nresource "octopusdeploy_certificate" "tenanted" {{\n  name                              = "Tenanted"\n  certificate_data                  = "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"\n  password                          = "Password01!"\n  environments                      = []\n  notes                             = "A test certificate"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Tenanted"\n  tenants                           = [octopusdeploy_tenant.tenant_team_a.id]\n}}\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Tenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_tag_set" "tagset_tag1" {{\n  name        = "tag1"\n  description = "Test tagset"\n  sort_order  = 0\n}}\n\nresource "octopusdeploy_tag" "tag_a" {{\n  name        = "a"\n  color       = "#333333"\n  description = "tag a"\n  sort_order  = 2\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag" "tag_b" {{\n  name        = "b"\n  color       = "#333333"\n  description = "tag b"\n  sort_order  = 3\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tenant" "tenant_team_a" {{\n  name        = "Team A"\n  description = "Test tenant"\n  tenant_tags = ["tag1/a", "tag1/b"]\n  depends_on = [octopusdeploy_tag.tag_a, octopusdeploy_tag.tag_b]\n\n\n}}\n\nresource "octopusdeploy_tenant_project" "tenant_project" {{\n  environment_ids = [octopusdeploy_environment.test_environment.id, octopusdeploy_environment.development_environment.id, octopusdeploy_environment.production_environment.id]\n  project_id   = octopusdeploy_project.deploy_frontend_project.id\n  tenant_id    = octopusdeploy_tenant.tenant_team_a.id\n}}\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_library_variable_set" "library_variable_set_octopus_variables" {{\n  name        = "Octopus Variables"\n\n  template {{\n    name             = "template"\n    label            = "a"\n    help_text        = "a"\n    default_value    = "a"\n    display_settings = {{ "Octopus.ControlType" = "SingleLineText" }}\n  }}\n\n  template {{\n    name             = "Drop Down"\n    label            = "Label"\n    help_text        = "Help Text"\n    default_value    = "Value1"\n    display_settings = {{ "Octopus.ControlType" = "Select", "Octopus.SelectOptions" = "Value1|Display text 1\\nValue2|Display text 2" }}\n  }}\n\n  template {{\n    name             = "Check Box"\n    label            = "Check Box"\n    help_text        = "Help Text"\n    default_value    = "Default"\n    display_settings = {{ "Octopus.ControlType" = "Checkbox" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Tenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = [octopusdeploy_library_variable_set.library_variable_set_octopus_variables.id]\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n  template {{\n    name             = "Project Template Variable"\n    label            = "Test"\n    default_value    = "Test"\n    help_text = "help text goes here"\n    display_settings = {{ "Octopus.ControlType" = "SingleLineText" }}\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_tenant" "tenant_team_a" {{\n  name        = "Team A"\n  description = "Test tenant"\n}}\n\nresource "octopusdeploy_tenant_project" "tenant_project" {{\n  environment_ids = [octopusdeploy_environment.test_environment.id, octopusdeploy_environment.development_environment.id, octopusdeploy_environment.production_environment.id]\n  project_id   = octopusdeploy_project.deploy_frontend_project.id\n  tenant_id    = octopusdeploy_tenant.tenant_team_a.id\n}}\n\nresource "octopusdeploy_tenant_project_variable" "tenantprojectvariable6_team_a" {{\n  environment_id = octopusdeploy_environment.development_environment.id\n  project_id     = octopusdeploy_project.deploy_frontend_project.id\n  template_id    = octopusdeploy_project.deploy_frontend_project.template[0].id\n  tenant_id      = octopusdeploy_tenant.tenant_team_a.id\n  value          = "my value"\n  depends_on = [octopusdeploy_tenant_project.tenant_project]\n}}\n\nresource "octopusdeploy_tenant_common_variable" "tenantcommonvariable1_team_a" {{\n  library_variable_set_id = "${{octopusdeploy_library_variable_set.library_variable_set_octopus_variables.id}}"\n  template_id             = "${{octopusdeploy_library_variable_set.library_variable_set_octopus_variables.template[0].id}}"\n  tenant_id               = "${{octopusdeploy_tenant.tenant_team_a.id}}"\n  value                   = "my value"\n  depends_on = [octopusdeploy_tenant_project.tenant_project]\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 1000000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_project_deployment_target_trigger" "projecttrigger_test" {{\n  name             = "test"\n  project_id       = "${{octopusdeploy_project.deploy_frontend_project.id}}"\n  event_categories = []\n  environment_ids  = []\n  event_groups     = ["MachineAvailableForDeployment"]\n  roles            = []\n  should_redeploy  = false\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nresource "octopusdeploy_aws_account" "account_aws_account" {{\n  name                              = "AWS Account"\n  description                       = ""\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  access_key                        = "ABCDEFGHIJKLMNOPQRST"\n  secret_key                        = "secretgoeshere"\n}}\n\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\n\nresource octopusdeploy_kubernetes_cluster_deployment_target test_eks {{\n  cluster_url                       = "https://cluster"\n  environments                      = ["${{octopusdeploy_environment.test_environment.id}}"]\n  name                              = "Test"\n  roles                             = ["eks"]\n  cluster_certificate               = ""\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  namespace                         = ""\n  skip_tls_verification             = true\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n  uri                               = ""\n  default_worker_pool_id            = octopusdeploy_static_worker_pool.workerpool_docker.id\n\n  container {{\n    feed_id = ""\n    image   = ""\n  }}\n\n  aws_account_authentication {{\n    account_id        = "${{octopusdeploy_aws_account.account_aws_account.id}}"\n    cluster_name      = "clustername"\n    assume_role       = false\n    use_instance_role = false\n  }}\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_static_worker_pool" "workerpool_docker" {{\n  name        = "Docker"\n  description = "A test worker pool"\n  is_default  = false\n  sort_order  = 3\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_ssh_key_account" "account_ec2_sydney" {{\n  name                              = "ec2 sydney"\n  description                       = ""\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  private_key_file                  = "${{var.account_ec2_sydney_cert}}"\n  username                          = "ec2-user"\n  private_key_passphrase            = "${{var.account_ec2_sydney}}"\n}}\nvariable "account_ec2_sydney" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The password associated with the certificate for account ec2 sydney"\n}}\nvariable "account_ec2_sydney_cert" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The certificate file for account ec2 sydney"\n}}\n\nresource "octopusdeploy_ssh_connection_deployment_target" "target_3_25_215_87" {{\n  account_id            = "${{octopusdeploy_ssh_key_account.account_ec2_sydney.id}}"\n  environments          = ["${{octopusdeploy_environment.development_environment.id}}"]\n  fingerprint           = "d5:6b:a3:78:fa:fe:f5:ad:d4:79:4a:57:35:6a:32:ef"\n  host                  = "3.25.215.87"\n  name                  = "Test"\n  roles                 = ["vm"]\n  dot_net_core_platform = "linux-x64"\n  machine_policy_id     = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_listening_tentacle_deployment_target" "target_vm_listening_ngrok" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "Test"\n  roles                             = ["vm"]\n  tentacle_url                      = "https://tentacle/"\n  thumbprint                        = "55E05FD1B0F76E60F6DA103988056CE695685FD1"\n  is_disabled                       = false\n  is_in_process                     = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n\n  tentacle_version_details {{\n  }}\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_polling_tentacle_deployment_target" "target_desktop_3e4k4r8" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "Test"\n  roles                             = ["vm"]\n  tentacle_url                      = "poll://abcdefghijklmnopqrst/"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "PowerShell"\n  shell_version                     = "5.1.22621.1"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n\n  tentacle_version_details {{\n  }}\n\n  thumbprint = "1854A302E5D9EAC1CAA3DA1F5249F82C28BB2B86"\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_cloud_region_deployment_target" "target_region1" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "Test"\n  roles                             = ["cloud"]\n  default_worker_pool_id            = ""\n  health_status                     = "Healthy"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_offline_package_drop_deployment_target" "target_offline" {{\n  applications_directory            = "c:\\\\temp"\n  working_directory                 = "c:\\\\temp"\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "Test"\n  roles                             = ["offline"]\n  health_status                     = "Healthy"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_azure_subscription_account" "account_subscription" {{\n  description                       = "A test account"\n  name                              = "Subscription"\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  storage_endpoint_suffix           = "storage_endpoint_suffix"\n  subscription_id                   = "fde6a0ae-a1d4-40ae-91de-88f4ed898c03"\n  azure_environment                 = "AzureCloud"\n  management_endpoint               = "management_endpoint"\n  certificate                       = "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"\n}}\n\nresource "octopusdeploy_azure_cloud_service_deployment_target" "target_azure" {{\n  environments                      = [octopusdeploy_environment.development_environment.id]\n  name                              = "Azure"\n  roles                             = ["cloud"]\n  account_id                        = octopusdeploy_azure_subscription_account.account_subscription.id\n  cloud_service_name                = "servicename"\n  storage_account_name              = "accountname"\n  default_worker_pool_id            = ""\n  health_status                     = "Unhealthy"\n  is_disabled                       = false\n  machine_policy_id                 = data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n  use_current_instance_count        = true\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\nresource "octopusdeploy_azure_service_fabric_cluster_deployment_target" "target_service_fabric" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "Service Fabric"\n  roles                             = ["cloud"]\n  connection_endpoint               = "http://endpoint"\n  aad_client_credential_secret      = ""\n  aad_credential_type               = "UserCredential"\n  aad_user_credential_password      = "${{var.target_service_fabric}}"\n  aad_user_credential_username      = "username"\n  certificate_store_location        = ""\n  certificate_store_name            = ""\n  client_certificate_variable       = ""\n  health_status                     = "Unhealthy"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n}}\nvariable "target_service_fabric" {{\n  type        = string\n  nullable    = true\n  sensitive   = true\n  description = "The secret variable value associated with the target \\"Service Fabric\\""\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\nresource "octopusdeploy_azure_web_app_deployment_target" "target_web_app" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "Web App"\n  roles                             = ["cloud"]\n  account_id                        = "${{octopusdeploy_azure_service_principal.account_sales_account.id}}"\n  resource_group_name               = "mattc-webapp"\n  web_app_name                      = "mattc-webapp"\n  health_status                     = "Unhealthy"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n  web_app_slot_name                 = "slot1"\n# This doesn\'t work for setting the worker pool\n#  endpoint {{\n#    communication_style    = "AzureWebApp"\n#    default_worker_pool_id = octopusdeploy_static_worker_pool.workerpool_docker.id\n#  }}\n\n}}\nresource "octopusdeploy_azure_service_principal" "account_sales_account" {{\n  name                              = "Sales Account"\n  description                       = ""\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  application_id                    = "08a4a027-6f2a-4793-a0e5-e59a3c79189f"\n  password                          = "${{var.account_sales_account}}"\n  subscription_id                   = "3b50dcf4-f74d-442e-93cb-301b13e1e2d5"\n  tenant_id                         = "3d13e379-e666-469e-ac38-ec6fd61c1166"\n}}\nvariable "account_sales_account" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The Azure secret associated with the account Sales Account"\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_static_worker_pool" "workerpool_docker" {{\n  name        = "Docker"\n  description = "A test worker pool"\n  is_default  = false\n  sort_order  = 3\n}}\n\n###'),
        ('system',
         'HCL: ###\nresource "octopusdeploy_certificate" "certificate_kind_ca" {{\n  name                              = "Test"\n  certificate_data                  = "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"\n  password                          = "Password01!"\n  environments                      = []\n  notes                             = "A test certificate"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n}}\n\nresource "octopusdeploy_channel" "channel1" {{\n  name        = "Test 1"\n  project_id  = octopusdeploy_project.project_1.id\n  description = "Test channel"\n  is_default  = true\n  lifecycle_id = octopusdeploy_lifecycle.simple_lifecycle.id\n}}\n\nresource "octopusdeploy_channel" "channel2" {{\n  name        = "Test 2"\n  project_id  = octopusdeploy_project.project_2.id\n  description = "Test channel"\n  is_default  = true\n}}\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_docker_container_registry" "feed_docker" {{\n  name                                 = "Docker"\n  password                             = "password"\n  username                             = "username"\n  api_version                          = "v1"\n  feed_uri                             = "https://index.docker.io"\n  package_acquisition_location_options = ["ExecutionTarget", "NotAcquired"]\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "blah_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Blah"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_git_credential" "gitcredential_matt" {{\n  name     = "matt"\n  type     = "UsernamePassword"\n  username = "mcasperson"\n  password = "${{var.gitcredential_matt}}"\n}}\n\nvariable "gitcredential_matt" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The secret variable value associated with the git credential \\"matt\\""\n}}\n\nresource "octopusdeploy_helm_feed" "feed_helm" {{\n  name                                 = "Helm"\n  password                             = "password"\n  feed_uri                             = "https://charts.helm.sh/stable/"\n  username                             = "username"\n  package_acquisition_location_options = ["ExecutionTarget", "NotAcquired"]\n}}\n\n\nresource "octopusdeploy_lifecycle" "simple_lifecycle" {{\n  description = "A test lifecycle"\n  name        = "Simple"\n\n  release_retention_policy {{\n    quantity_to_keep    = 1\n\n    unit                = "Days"\n  }}\n\n  tentacle_retention_policy {{\n    quantity_to_keep    = 30\n\n    unit                = "Items"\n  }}\n\n  phase {{\n    automatic_deployment_targets = []\n    optional_deployment_targets  = [octopusdeploy_environment.development_environment.id]\n    name                         = octopusdeploy_environment.development_environment.name\n\n    release_retention_policy {{\n      quantity_to_keep    = 1\n\n      unit                = "Days"\n    }}\n\n    tentacle_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Items"\n    }}\n  }}\n\n  phase {{\n    automatic_deployment_targets = []\n    optional_deployment_targets  = [octopusdeploy_environment.test_environment.id]\n    name                         = octopusdeploy_environment.test_environment.name\n\n    release_retention_policy {{\n      quantity_to_keep    = 1\n\n      unit                = "Days"\n    }}\n\n    tentacle_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Items"\n    }}\n  }}\n\n  phase {{\n    automatic_deployment_targets = []\n    optional_deployment_targets  = [octopusdeploy_environment.production_environment.id]\n    name                         = octopusdeploy_environment.production_environment.name\n\n    release_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Days"\n    }}\n\n    tentacle_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Items"\n    }}\n  }}\n}}\n\nresource "octopusdeploy_lifecycle" "simple_lifecycle2" {{\n  description = "A test lifecycle"\n  name        = "Simple2"\n\n  release_retention_policy {{\n    quantity_to_keep    = 1\n\n    unit                = "Days"\n  }}\n\n  tentacle_retention_policy {{\n    quantity_to_keep    = 30\n\n    unit                = "Items"\n  }}\n\n  phase {{\n    automatic_deployment_targets = []\n    optional_deployment_targets  = [octopusdeploy_environment.development_environment.id]\n    name                         = octopusdeploy_environment.development_environment.name\n\n    release_retention_policy {{\n      quantity_to_keep    = 1\n\n      unit                = "Days"\n    }}\n\n    tentacle_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Items"\n    }}\n  }}\n\n  phase {{\n    automatic_deployment_targets = []\n    optional_deployment_targets  = [octopusdeploy_environment.test_environment.id]\n    name                         = octopusdeploy_environment.test_environment.name\n\n    release_retention_policy {{\n      quantity_to_keep    = 1\n\n      unit                = "Days"\n    }}\n\n    tentacle_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Items"\n    }}\n  }}\n\n  phase {{\n    automatic_deployment_targets = []\n    optional_deployment_targets  = [octopusdeploy_environment.production_environment.id]\n    name                         = octopusdeploy_environment.production_environment.name\n\n    release_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Days"\n    }}\n\n    tentacle_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Items"\n    }}\n  }}\n}}\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_worker_pools" "workerpool_default" {{\n  name = "Default Worker Pool"\n  ids  = null\n  skip = 0\n  take = 1\n}}\n\nresource "octopusdeploy_project" "project_1" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = true\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = [octopusdeploy_library_variable_set.octopus_library_variable_set.id]\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n\n  git_library_persistence_settings {{\n    git_credential_id  = "${{octopusdeploy_git_credential.gitcredential_matt.id}}"\n    url                = "https://github.com/mcasperson/octogittest.git"\n    base_path          = ".octopus/integrationtest"\n    default_branch     = "main"\n    protected_branches = ["test"]\n  }}\n}}\n\nresource "octopusdeploy_variable" "string_variable" {{\n  owner_id  = octopusdeploy_project.project_1.id\n  type      = "String"\n  name      = "Test"\n  value     = "PlainText"\n}}\n\nresource "octopusdeploy_variable" "string_variable2" {{\n  owner_id  = octopusdeploy_project.project_1.id\n  type      = "String"\n  name      = "Test2"\n  value     = "PlainText"\n  scope {{\n    environments = [octopusdeploy_environment.development_environment.id]\n  }}\n}}\n\nresource "octopusdeploy_variable" "scoped_var" {{\n  owner_id = octopusdeploy_project.project_1.id\n  type     = "String"\n  name     = "tenantscoped"\n  value    = "test"\n  scope {{\n    tenant_tags = ["tag1/a"]\n  }}\n}}\n\nresource "octopusdeploy_variable" "string_variable3" {{\n  owner_id  = octopusdeploy_project.project_1.id\n  type      = "String"\n  name      = "Test3"\n  value     = "PlainText"\n  scope {{\n    environments = [octopusdeploy_environment.test_environment.id]\n  }}\n}}\n\nresource "octopusdeploy_variable" "string_variable4" {{\n  owner_id  = octopusdeploy_project.project_1.id\n  type      = "String"\n  name      = "HelmFeed"\n  value     = octopusdeploy_helm_feed.feed_helm.id\n}}\n\nresource "octopusdeploy_variable" "string_variable5" {{\n  owner_id  = octopusdeploy_project.project_1.id\n  type      = "String"\n  name      = "UsernamePassword"\n  value     = octopusdeploy_username_password_account.account_gke.id\n}}\n\nresource "octopusdeploy_variable" "string_variable6" {{\n  owner_id  = octopusdeploy_project.project_1.id\n  type      = "String"\n  name      = "WorkerPool"\n  value     = octopusdeploy_static_worker_pool.workerpool_docker.id\n}}\n\nresource "octopusdeploy_variable" "string_variable7" {{\n  owner_id  = octopusdeploy_project.project_1.id\n  type      = "String"\n  name      = "Certificate"\n  value     = octopusdeploy_certificate.certificate_kind_ca.id\n}}\n\nresource "octopusdeploy_variable" "string_variable8" {{\n  owner_id  = octopusdeploy_project.project_1.id\n  type      = "String"\n  name      = "TestNull"\n  value     = null\n}}\n\noutput "octopus_project_1" {{\n  value = octopusdeploy_project.project_1.id\n}}\n\nresource "octopusdeploy_project" "project_2" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project 2"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test 2"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_deployment_process" "deployment_process_hello_world" {{\n  project_id = "${{octopusdeploy_project.project_2.id}}"\n\n  step {{\n    condition           = "Success"\n    name                = "Hello world (using Bash)"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.Script"\n      name                               = "Hello world (using Bash)"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = true\n      worker_pool_id                     = octopusdeploy_static_worker_pool.workerpool_docker.id\n      properties                         = {{\n        "Octopus.Action.Script.ScriptSource" = "Inline"\n        "Octopus.Action.Script.ScriptBody" = "echo \'Hello world, using Bash\'\\n\\n#TODO: Experiment with steps of your own :)\\n\\necho \'[Learn more about the types of steps available in Octopus](https://oc.to/OnboardingAddStepsLearnMore)\'"\n        "Octopus.Action.Script.Syntax" = "Bash"\n        "Octopus.Action.RunOnServer" = "true"\n      }}\n      environments                       = []\n      excluded_environments              = []\n      channels                           = []\n      tenant_tags                        = []\n      features                           = []\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n  depends_on = []\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nresource "octopusdeploy_project_deployment_target_trigger" "projecttrigger_test1" {{\n  name             = "Test 1"\n  project_id       = "${{octopusdeploy_project.project_1.id}}"\n  event_categories = []\n  environment_ids  = []\n  event_groups     = ["MachineAvailableForDeployment"]\n  roles            = []\n  should_redeploy  = false\n}}\n\nresource "octopusdeploy_project_deployment_target_trigger" "projecttrigger_test2" {{\n  name             = "Test 2"\n  project_id       = "${{octopusdeploy_project.project_2.id}}"\n  event_categories = []\n  environment_ids  = []\n  event_groups     = ["MachineAvailableForDeployment"]\n  roles            = []\n  should_redeploy  = false\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_tag_set" "tagset_tag1" {{\n  name        = "tag1"\n  description = "Test tagset"\n  sort_order  = 0\n}}\n\nresource "octopusdeploy_tag" "tag_a" {{\n  name        = "a"\n  color       = "#333333"\n  description = "tag a"\n  sort_order  = 2\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag" "tag_b" {{\n  name        = "b"\n  color       = "#333333"\n  description = "tag b"\n  sort_order  = 3\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag_set" "tagset_tag2" {{\n  name        = "tag2"\n  description = "Test tagset"\n  sort_order  = 0\n}}\n\nresource "octopusdeploy_tag" "tag_c" {{\n  name        = "c"\n  color       = "#333333"\n  description = "tag c"\n  sort_order  = 2\n  tag_set_id = octopusdeploy_tag_set.tagset_tag2.id\n}}\n\nresource "octopusdeploy_tag" "tag_d" {{\n  name        = "d"\n  color       = "#333333"\n  description = "tag d"\n  sort_order  = 3\n  tag_set_id = octopusdeploy_tag_set.tagset_tag2.id\n}}\n\nresource "octopusdeploy_tenant" "tenant_team_a" {{\n  name        = "Team A"\n  description = "Test tenant"\n  tenant_tags = ["tag1/a", "tag1/b"]\n  depends_on = [octopusdeploy_tag.tag_a, octopusdeploy_tag.tag_b]\n}}\n\nresource "octopusdeploy_tenant_project" "tenant_project" {{\n  environment_ids = [octopusdeploy_environment.test_environment.id, octopusdeploy_environment.development_environment.id, octopusdeploy_environment.production_environment.id]\n  project_id   = octopusdeploy_project.project_1.id\n  tenant_id = octopusdeploy_tenant.tenant_team_a.id\n}}\n\nresource "octopusdeploy_tenant" "tenant_team_b" {{\n  name        = "Team B"\n  description = "Test tenant"\n  tenant_tags = ["tag1/a", "tag1/b"]\n  depends_on = [octopusdeploy_tag.tag_a, octopusdeploy_tag.tag_b]\n}}\n\nresource "octopusdeploy_tenant_project" "tenantb_project" {{\n  environment_ids = [octopusdeploy_environment.test_environment.id, octopusdeploy_environment.development_environment.id, octopusdeploy_environment.production_environment.id]\n  project_id   = octopusdeploy_project.project_2.id\n  tenant_id    = octopusdeploy_tenant.tenant_team_b.id\n}}\n\nresource "octopusdeploy_username_password_account" "account_gke" {{\n  description                       = "A test account"\n  name                              = "GKE"\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  username                          = "admin"\n  password                          = "secretgoeshere"\n}}\n\nresource "octopusdeploy_library_variable_set" "octopus_library_variable_set" {{\n  name = "Test"\n  description = "Test variable set"\n}}\n\nresource "octopusdeploy_library_variable_set" "octopus_library_variable_set2" {{\n  name = "Test2"\n  description = "Test variable set"\n}}\n\nresource "octopusdeploy_variable" "octopus_admin_api_key" {{\n  name = "Test.Variable"\n  type = "String"\n  description = "Test variable"\n  is_sensitive = false\n  is_editable = true\n  owner_id = octopusdeploy_library_variable_set.octopus_library_variable_set.id\n  value = "test"\n}}\n\nresource "octopusdeploy_static_worker_pool" "workerpool_docker" {{\n  name        = "Docker"\n  description = "A test worker pool"\n  is_default  = false\n  sort_order  = 3\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = true\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n\n  git_username_password_persistence_settings {{\n    url                = "https://github.com/mcasperson/octogittest.git"\n    username           = "mcasperson"\n    password           = "${{var.project_git_password}}"\n    base_path          = ".octopus/projectest"\n    default_branch     = "main"\n    protected_branches = []\n  }}\n}}\n\nvariable "project_git_password" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The git password for the project"\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nresource "octopusdeploy_channel" "backend_mainline" {{\n  name        = "Test"\n  project_id  = octopusdeploy_project.deploy_frontend_project.id\n  description = "Test channel"\n  depends_on  = [octopusdeploy_project.deploy_frontend_project, octopusdeploy_deployment_process.deploy_backend]\n  is_default  = true\n  rule {{\n    tag = "^$"\n    action_package {{\n      deployment_action = "Test"\n      package_reference = "test"\n    }}\n  }}\n}}\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_worker_pools" "workerpool_default" {{\n  name = "Default Worker Pool"\n  ids  = null\n  skip = 0\n  take = 1\n}}\n\ndata "octopusdeploy_feeds" "built_in_feed" {{\n  feed_type    = "BuiltIn"\n  ids          = null\n  partial_name = ""\n  skip         = 0\n  take         = 1\n}}\n\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_deployment_process" "deploy_backend" {{\n  project_id = octopusdeploy_project.deploy_frontend_project.id\n\n  step {{\n    condition           = "Success"\n    name                = "Test"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.AwsRunCloudFormation"\n      name                               = "Test"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = false\n      worker_pool_id                     = data.octopusdeploy_worker_pools.workerpool_default.worker_pools[0].id\n      properties                         = {{ "Octopus.Action.Aws.AssumeRole" = "False", "Octopus.Action.Aws.CloudFormation.Tags" = "[{{\\"key\\":\\"Environment\\",\\"value\\":\\"#{{Octopus.Environment.Name | Replace \\\\\\" .*\\\\\\" \\\\\\"\\\\\\"}}\\"}},{{\\"key\\":\\"DeploymentProject\\",\\"value\\":\\"API_Gateway\\"}}]", "Octopus.Action.Aws.CloudFormationStackName" = "OctopusBuilder-APIGateway-mcasperson-#{{Octopus.Environment.Name | Replace \\" .*\\" \\"\\" | ToLower}}", "Octopus.Action.Aws.CloudFormationTemplate" = "Resources:\\n  RestApi:\\n    Type: \'AWS::ApiGateway::RestApi\'\\n    Properties:\\n      Description: $${{CFproperty}}\\n      Name: Octopus Workflow Builder\\n      BinaryMediaTypes:\\n        - \'*/*\'\\n      EndpointConfiguration:\\n        Types:\\n          - REGIONAL\\n  Health:\\n    Type: \'AWS::ApiGateway::Resource\'\\n    Properties:\\n      RestApiId:\\n        Ref: RestApi\\n      ParentId:\\n        \'Fn::GetAtt\':\\n          - RestApi\\n          - RootResourceId\\n      PathPart: health\\n  Api:\\n    Type: \'AWS::ApiGateway::Resource\'\\n    Properties:\\n      RestApiId:\\n        Ref: RestApi\\n      ParentId:\\n        \'Fn::GetAtt\':\\n          - RestApi\\n          - RootResourceId\\n      PathPart: api\\n  Web:\\n    Type: \'AWS::ApiGateway::Resource\'\\n    Properties:\\n      RestApiId: !Ref RestApi\\n      ParentId: !GetAtt\\n        - RestApi\\n        - RootResourceId\\n      PathPart: \'{{proxy+}}\'\\nOutputs:\\n  RestApi:\\n    Description: The REST API\\n    Value: !Ref RestApi\\n  RootResourceId:\\n    Description: ID of the resource exposing the root resource id\\n    Value:\\n      \'Fn::GetAtt\':\\n        - RestApi\\n        - RootResourceId\\n  Health:\\n    Description: ID of the resource exposing the health endpoints\\n    Value: !Ref Health\\n  Api:\\n    Description: ID of the resource exposing the api endpoint\\n    Value: !Ref Api\\n  Web:\\n    Description: ID of the resource exposing the web app frontend\\n    Value: !Ref Web\\n", "Octopus.Action.Aws.CloudFormationTemplateParameters" = "[]", "Octopus.Action.Aws.CloudFormationTemplateParametersRaw" = "[]", "Octopus.Action.Aws.Region" = "ap-southeast-2", "Octopus.Action.Aws.TemplateSource" = "Inline", "Octopus.Action.Aws.WaitForCompletion" = "True", "Octopus.Action.AwsAccount.UseInstanceRole" = "False", "Octopus.Action.AwsAccount.Variable" = "AWS Account" }}\n      environments                       = []\n      excluded_environments              = []\n      channels                           = []\n      tenant_tags                        = []\n      features                           = []\n      package {{\n        name                      = "test"\n        package_id                = "test"\n        feed_id                   = data.octopusdeploy_feeds.built_in_feed.feeds[0].id\n        acquisition_location      = "Server"\n        extract_during_deployment = true\n      }}\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_worker_pools" "workerpool_default" {{\n  name = "Default Worker Pool"\n  ids  = null\n  skip = 0\n  take = 1\n}}\n\ndata "octopusdeploy_feeds" "built_in_feed" {{\n  feed_type    = "BuiltIn"\n  ids          = null\n  partial_name = ""\n  skip         = 0\n  take         = 1\n}}\n\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_deployment_process" "deploy_backend" {{\n  project_id = octopusdeploy_project.deploy_frontend_project.id\n\n  step {{\n    condition           = "Success"\n    name                = "Test"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.TerraformApply"\n      name                               = "Test"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = false\n      worker_pool_id                     = ""\n      worker_pool_variable               = ""\n      properties                         = {{\n        "Octopus.Action.Script.ScriptSource"                    = "Inline"\n        "Octopus.Action.Terraform.AzureAccount"                 = "False"\n        "Octopus.Action.Terraform.PlanJsonOutput"               = "False"\n        "Octopus.Action.Terraform.RunAutomaticFileSubstitution" = "True"\n        "Octopus.Action.GoogleCloud.UseVMServiceAccount"        = "True"\n        "Octopus.Action.Terraform.GoogleCloudAccount"           = "False"\n        "Octopus.Action.Terraform.TemplateParameters"           = jsonencode({{}})\n        "Octopus.Action.Terraform.AllowPluginDownloads"         = "True"\n        "Octopus.Action.Terraform.ManagedAccount"               = "None"\n        "Octopus.Action.Terraform.Template"                     = "#test"\n        "Octopus.Action.GoogleCloud.ImpersonateServiceAccount"  = "False"\n      }}\n      environments          = []\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n      features              = []\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_github_repository_feed" "example" {{\n  download_attempts              = 1\n  download_retry_backoff_seconds = 30\n  feed_uri                       = "https://api.github.com"\n  password                       = "test-password"\n  name                           = "Github"\n  username                       = "test-username"\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\ndata "octopusdeploy_accounts" "example" {{\n  account_type = "AmazonWebServicesAccount"\n  ids          = []\n  partial_name = "AWS Account"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_accounts" "azure" {{\n  account_type = "AzureServicePrincipal"\n  ids          = []\n  partial_name = "Azure"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_certificates" "example" {{\n  archived     = false\n  ids          = []\n  partial_name = "Test"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_lifecycles" "lifecycle" {{\n  ids          = []\n  partial_name = "Simple"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_channel" "channel1" {{\n  name        = "Test 1"\n  project_id  = octopusdeploy_project.project_1.id\n  description = "Test channel"\n  is_default  = true\n  lifecycle_id = data.octopusdeploy_lifecycles.lifecycle.lifecycles[0].id\n}}\n\nresource "octopusdeploy_channel" "channel2" {{\n  name        = "Test 2"\n  project_id  = octopusdeploy_project.project_2.id\n  description = "Test channel"\n  is_default  = true\n}}\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\ndata "octopusdeploy_feeds" "docker_feed" {{\n  feed_type    = "Docker"\n  ids          = null\n  partial_name = "Docker"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "helm_feed" {{\n  feed_type    = "Helm"\n  ids          = null\n  partial_name = "Helm"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_projects" "other" {{\n  partial_name           = "Lookup project"\n  skip                   = 0\n  take                   = 1\n}}\n\ndata "octopusdeploy_feeds" "project_feed" {{\n  feed_type    = "OctopusProject"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_project_groups" "project_group" {{\n  ids          = null\n  partial_name = "Test"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "built_in_feed" {{\n  feed_type    = "BuiltIn"\n  ids          = null\n  partial_name = ""\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_git_credentials" "git" {{\n  name = "matt"\n  skip = 0\n  take = 1\n}}\n\ndata "octopusdeploy_library_variable_sets" "variable" {{\n  partial_name = "Test"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_library_variable_sets" "variable2" {{\n  partial_name = "Test2"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_library_variable_sets" "variable3" {{\n  partial_name = "Test3"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_worker_pools" "workerpool_default" {{\n  name = "Default Worker Pool"\n  ids  = null\n  skip = 0\n  take = 1\n}}\n\n\ndata "octopusdeploy_worker_pools" "worker_pool_docker" {{\n  ids          = null\n  partial_name = "Docker"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_project" "project_1" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = true\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = [\n    data.octopusdeploy_library_variable_sets.variable.library_variable_sets[0].id,\n    data.octopusdeploy_library_variable_sets.variable2.library_variable_sets[0].id,\n    data.octopusdeploy_library_variable_sets.variable3.library_variable_sets[0].id\n  ]\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n\n  git_library_persistence_settings {{\n    git_credential_id  = data.octopusdeploy_git_credentials.git.git_credentials[0].id\n    url                = "https://github.com/mcasperson/octogittest.git"\n    base_path          = ".octopus/integrationtest"\n    default_branch     = "main"\n    protected_branches = []\n  }}\n}}\n\nresource "octopusdeploy_variable" "excluded_variable" {{\n  owner_id = octopusdeploy_project.project_1.id\n  type     = "String"\n  name     = "Excluded"\n  value    = "PlainText"\n}}\n\nresource "octopusdeploy_variable" "named_excluded_variable" {{\n  owner_id = octopusdeploy_project.project_1.id\n  type     = "String"\n  name     = "NamedExcluded"\n  value    = "PlainText"\n}}\n\nresource "octopusdeploy_variable" "string_variable" {{\n  owner_id = octopusdeploy_project.project_1.id\n  type     = "String"\n  name     = "Test"\n  value    = "PlainText"\n}}\n\noutput "octopus_project_1" {{\n  value = octopusdeploy_project.project_1.id\n}}\n\nresource "octopusdeploy_variable" "feed_variable" {{\n  owner_id = octopusdeploy_project.project_1.id\n  type     = "String"\n  name     = "HelmFeed"\n  value    = data.octopusdeploy_feeds.helm_feed.feeds[0].id\n}}\n\nresource "octopusdeploy_variable" "account_variable" {{\n  owner_id = octopusdeploy_project.project_1.id\n  type     = "String"\n  name     = "AwsAccount"\n  value    = data.octopusdeploy_accounts.example.accounts[0].id\n}}\n\nresource "octopusdeploy_variable" "gitcred_variable" {{\n  owner_id = octopusdeploy_project.project_1.id\n  type     = "String"\n  name     = "GitCreds"\n  value    = data.octopusdeploy_git_credentials.git.git_credentials[0].id\n}}\n\nresource "octopusdeploy_variable" "workerpool_variable" {{\n  owner_id = octopusdeploy_project.project_1.id\n  type     = "String"\n  name     = "WorkerPool"\n  value    = data.octopusdeploy_worker_pools.workerpool_default.worker_pools[0].id\n}}\n\nresource "octopusdeploy_variable" "certificate_variable" {{\n  owner_id = octopusdeploy_project.project_1.id\n  type     = "String"\n  name     = "Certificate"\n  value    = data.octopusdeploy_certificates.example.certificates[0].id\n}}\n\nresource "octopusdeploy_project" "project_2" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project 2"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test 2"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_deployment_process" "deployment_process_hello_world" {{\n  project_id = "${{octopusdeploy_project.project_2.id}}"\n\n  step {{\n    condition           = "Success"\n    name                = "Hello world (using Bash)"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.Script"\n      name                               = "Hello world (using Bash)"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = true\n      worker_pool_id                     = "${{data.octopusdeploy_worker_pools.worker_pool_docker.worker_pools[0].id}}"\n      properties                         = {{\n        "Octopus.Action.Script.ScriptSource" = "Inline"\n        "Octopus.Action.Script.ScriptBody" = "echo \'Hello world, using Bash\'\\n\\n#TODO: Experiment with steps of your own :)\\n\\necho \'[Learn more about the types of steps available in Octopus](https://oc.to/OnboardingAddStepsLearnMore)\'"\n        "Octopus.Action.Script.Syntax" = "Bash"\n        "Octopus.Action.RunOnServer" = "true"\n      }}\n      environments                       = []\n      excluded_environments              = []\n      channels                           = []\n      tenant_tags                        = []\n      features                           = []\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n  depends_on = []\n}}\n\nresource "octopusdeploy_runbook" "runbook" {{\n  project_id         = octopusdeploy_project.project_1.id\n  name               = "MyRunbook"\n  description        = "Test Runbook"\n  multi_tenancy_mode = "Untenanted"\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n  retention_policy {{\n    quantity_to_keep = 10\n  }}\n  environment_scope           = "Specified"\n  environments                = []\n  default_guided_failure_mode = "EnvironmentDefault"\n  force_package_download      = false\n}}\n\nresource "octopusdeploy_runbook" "runbook2" {{\n  project_id         = octopusdeploy_project.project_1.id\n  name               = "MyRunbook2"\n  description        = "Test Runbook"\n  multi_tenancy_mode = "Untenanted"\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n  retention_policy {{\n    quantity_to_keep = 10\n  }}\n  environment_scope           = "Specified"\n  environments                = []\n  default_guided_failure_mode = "EnvironmentDefault"\n  force_package_download      = false\n}}\n\nresource "octopusdeploy_runbook" "runbook3" {{\n  project_id         = octopusdeploy_project.project_1.id\n  name               = "MyRunbook3"\n  description        = "Test Runbook"\n  multi_tenancy_mode = "Untenanted"\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n  retention_policy {{\n    quantity_to_keep = 10\n  }}\n  environment_scope           = "Specified"\n  environments                = []\n  default_guided_failure_mode = "EnvironmentDefault"\n  force_package_download      = false\n}}\n\nresource "octopusdeploy_runbook_process" "runbook" {{\n  runbook_id = octopusdeploy_runbook.runbook3.id\n\n  step {{\n    condition           = "Success"\n    name                = "Hello world (using PowerShell)"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.Script"\n      name                               = "Hello world (using PowerShell)"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = true\n      worker_pool_id                     = ""\n      properties                         = {{\n        "Octopus.Action.Script.ScriptSource" = "Inline"\n        "Octopus.Action.Script.ScriptBody"   = "Write-Host \'Hello world, using PowerShell\'\\n\\n#TODO: Experiment with steps of your own :)\\n\\nWrite-Host \'[Learn more about the types of steps available in Octopus](https://oc.to/OnboardingAddStepsLearnMore)\'"\n        "Octopus.Action.Script.Syntax"       = "PowerShell"\n      }}\n      environments          = []\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n      features              = []\n\n      package {{\n        name                      = "package1"\n        package_id                = "package1"\n        acquisition_location      = "Server"\n        extract_during_deployment = false\n        feed_id                   = "#{{HelmFeed}}"\n        properties                = {{ Extract = "True", Purpose = "", SelectionMode = "immediate" }}\n      }}\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n\n  step {{\n    condition           = "Success"\n    name                = "Test"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.TerraformApply"\n      name                               = "Test"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = false\n      worker_pool_id                     = ""\n      worker_pool_variable               = ""\n      properties                         = {{\n        "Octopus.Action.Terraform.PlanJsonOutput"               = "False"\n        "Octopus.Action.Terraform.TemplateDirectory"            = "blah"\n        "Octopus.Action.Terraform.ManagedAccount"               = "None"\n        "Octopus.Action.Terraform.GoogleCloudAccount"           = "False"\n        "Octopus.Action.Script.ScriptSource"                    = "Package"\n        "Octopus.Action.GoogleCloud.UseVMServiceAccount"        = "True"\n        "Octopus.Action.Terraform.AzureAccount"                 = "False"\n        "Octopus.Action.Package.DownloadOnTentacle"             = "False"\n        "Octopus.Action.Terraform.RunAutomaticFileSubstitution" = "True"\n        "Octopus.Action.GoogleCloud.ImpersonateServiceAccount"  = "False"\n        "Octopus.Action.Terraform.AllowPluginDownloads"         = "True"\n      }}\n      environments          = []\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n      features              = []\n\n      primary_package {{\n        package_id           = "terraform"\n        acquisition_location = "Server"\n        feed_id              = data.octopusdeploy_feeds.built_in_feed.feeds[0].id\n        properties           = {{ SelectionMode = "immediate" }}\n      }}\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n\n  step {{\n    condition           = "Success"\n    name                = "Run an Azure Script"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.AzurePowerShell"\n      name                               = "Run an Azure Script"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = false\n      worker_pool_id                     = ""\n      worker_pool_variable               = ""\n      properties                         = {{\n        "Octopus.Action.Script.Syntax"       = "PowerShell"\n        "Octopus.Action.Azure.AccountId"     = data.octopusdeploy_accounts.azure.accounts[0].id\n        "Octopus.Action.Script.ScriptBody"   = "echo \\"hi\\""\n        "OctopusUseBundledTooling"           = "False"\n        "Octopus.Action.Script.ScriptSource" = "Inline"\n      }}\n      environments          = []\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n      features              = []\n      container {{\n        feed_id = data.octopusdeploy_feeds.docker_feed.feeds[0].id\n        image   = "octopusdeploy/worker-tools:6.0.0-ubuntu.22.04"\n      }}\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n\n  step {{\n    condition           = "Success"\n    name                = "Deploy a Release"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.DeployRelease"\n      name                               = "Deploy a Release"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = true\n      is_required                        = false\n      worker_pool_id                     = data.octopusdeploy_worker_pools.worker_pool_docker.worker_pools[0].id\n      worker_pool_variable               = ""\n      properties                         = {{\n        "Octopus.Action.DeployRelease.DeploymentCondition" = "Always"\n        "Octopus.Action.DeployRelease.ProjectId" = data.octopusdeploy_projects.other.projects[0].id\n      }}\n      environments                       = []\n      excluded_environments              = []\n      channels                           = []\n      tenant_tags                        = []\n\n      primary_package {{\n        package_id           = data.octopusdeploy_projects.other.projects[0].id\n        acquisition_location = "NotAcquired"\n        feed_id              = data.octopusdeploy_feeds.project_feed.feeds[0].id\n        properties           = {{}}\n      }}\n\n      features = []\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n}}\n\nresource "octopusdeploy_project_deployment_target_trigger" "projecttrigger_test1" {{\n  name             = "Test 1"\n  project_id       = "${{octopusdeploy_project.project_1.id}}"\n  event_categories = []\n  environment_ids  = []\n  event_groups     = ["MachineAvailableForDeployment"]\n  roles            = []\n  should_redeploy  = false\n}}\n\nresource "octopusdeploy_project_deployment_target_trigger" "projecttrigger_test2" {{\n  name             = "Test 2"\n  project_id       = "${{octopusdeploy_project.project_2.id}}"\n  event_categories = []\n  environment_ids  = []\n  event_groups     = ["MachineAvailableForDeployment"]\n  roles            = []\n  should_redeploy  = false\n}}\n\nprovider "octopusdeploy" {{\n  address  = var.octopus_server\n  api_key  = var.octopus_apikey\n  space_id = var.octopus_space_id\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_tag_set" "tagset_tag1" {{\n  name        = "tag1"\n  description = "Test tagset"\n  sort_order  = 0\n}}\n\nresource "octopusdeploy_tag" "tag_a" {{\n  name        = "a"\n  color       = "#333333"\n  description = "tag a"\n  sort_order  = 2\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag" "tag_b" {{\n  name        = "b"\n  color       = "#333333"\n  description = "tag b"\n  sort_order  = 3\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag_set" "tagset_tag2" {{\n  name        = "tag2"\n  description = "Test tagset"\n  sort_order  = 0\n}}\n\nresource "octopusdeploy_tag" "tag_c" {{\n  name        = "c"\n  color       = "#333333"\n  description = "tag c"\n  sort_order  = 2\n  tag_set_id = octopusdeploy_tag_set.tagset_tag2.id\n}}\n\nresource "octopusdeploy_tag" "tag_d" {{\n  name        = "d"\n  color       = "#333333"\n  description = "tag d"\n  sort_order  = 3\n  tag_set_id = octopusdeploy_tag_set.tagset_tag2.id\n}}\n\ndata "octopusdeploy_environments" "test" {{\n  ids          = []\n  partial_name = "Test"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_tenant" "tenant_team_a" {{\n  name        = "Team A"\n  description = "Test tenant"\n  tenant_tags = ["tag1/a", "tag1/b"]\n  depends_on = [octopusdeploy_tag.tag_a, octopusdeploy_tag.tag_b]\n\n\n}}\n\nresource "octopusdeploy_tenant_project" "tenanta_project" {{\n  environment_ids = [data.octopusdeploy_environments.test.environments[0].id]\n  project_id   = octopusdeploy_project.project_1.id\n  tenant_id = octopusdeploy_tenant.tenant_team_a.id\n}}\n\nresource "octopusdeploy_tenant" "tenant_team_b" {{\n  name        = "Team B"\n  description = "Test tenant"\n  tenant_tags = ["tag1/a", "tag1/b"]\n  depends_on = [octopusdeploy_tag.tag_a, octopusdeploy_tag.tag_b]\n}}\n\nresource "octopusdeploy_tenant_project" "tenantb_project" {{\n  environment_ids = [data.octopusdeploy_environments.test.environments[0].id]\n  project_id   = octopusdeploy_project.project_2.id\n  tenant_id    = octopusdeploy_tenant.tenant_team_b.id\n}}\n\nresource "octopusdeploy_tenant" "tenant_team_c" {{\n  name        = "Team C"\n  description = "Test tenant"\n  tenant_tags = ["tag1/a", "tag1/b"]\n  depends_on = [octopusdeploy_tag.tag_a, octopusdeploy_tag.tag_b]\n}}\n\nresource "octopusdeploy_tenant_project" "tenantc_project" {{\n  environment_ids = [data.octopusdeploy_environments.test.environments[0].id]\n  project_id   = octopusdeploy_project.project_2.id\n  tenant_id = octopusdeploy_tenant.tenant_team_c.id\n}}\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.11.3" }}\n    // Use the option below when debugging\n    // octopusdeploy = {{ source = "octopus.com/com/octopusdeploy" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n  sort_order                   = 0\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n  sort_order                   = 1\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n  sort_order                   = 2\n}}\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "built_in_feed" {{\n  feed_type    = "BuiltIn"\n  ids          = null\n  partial_name = ""\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_runbook" "runbook" {{\n  project_id         = octopusdeploy_project.deploy_frontend_project.id\n  name               = "Runbook"\n  description        = "Test Runbook"\n  multi_tenancy_mode = "Untenanted"\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n  retention_policy {{\n    quantity_to_keep = 10\n  }}\n  environment_scope           = "Specified"\n  environments                = [octopusdeploy_environment.development_environment.id]\n  default_guided_failure_mode = "EnvironmentDefault"\n  force_package_download      = false\n}}\n\nresource "octopusdeploy_runbook_process" "runbook" {{\n  runbook_id = octopusdeploy_runbook.runbook.id\n\n\n\n  step {{\n    condition           = "Success"\n    name                = "Hello world (using PowerShell)"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.Script"\n      name                               = "Hello world (using PowerShell)"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = true\n      worker_pool_id                     = ""\n      properties                         = {{\n        "Octopus.Action.Script.ScriptSource" = "Inline"\n        "Octopus.Action.Script.ScriptBody"   = "Write-Host \'Hello world, using PowerShell\'\\n\\n#TODO: Experiment with steps of your own :)\\n\\nWrite-Host \'[Learn more about the types of steps available in Octopus](https://oc.to/OnboardingAddStepsLearnMore)\'"\n        "Octopus.Action.Script.Syntax"       = "PowerShell"\n      }}\n      environments          = [octopusdeploy_environment.development_environment.id]\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n      features              = ["Octopus.Features.JsonConfigurationVariables"]\n\n      package {{\n        name                      = "package1"\n        package_id                = "package1"\n        acquisition_location      = "Server"\n        extract_during_deployment = false\n        feed_id                   = data.octopusdeploy_feeds.built_in_feed.feeds[0].id\n        properties                = {{ Extract = "True", Purpose = "", SelectionMode = "immediate" }}\n      }}\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n\n  step {{\n    condition           = "Success"\n    name                = "Test"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.TerraformApply"\n      name                               = "Test"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = false\n      worker_pool_id                     = ""\n      worker_pool_variable               = ""\n      properties                         = {{\n        "Octopus.Action.Terraform.PlanJsonOutput"               = "False"\n        "Octopus.Action.Terraform.TemplateDirectory"            = "blah"\n        "Octopus.Action.Terraform.ManagedAccount"               = "None"\n        "Octopus.Action.Terraform.GoogleCloudAccount"           = "False"\n        "Octopus.Action.Script.ScriptSource"                    = "Package"\n        "Octopus.Action.GoogleCloud.UseVMServiceAccount"        = "True"\n        "Octopus.Action.Terraform.AzureAccount"                 = "False"\n        "Octopus.Action.Package.DownloadOnTentacle"             = "False"\n        "Octopus.Action.Terraform.RunAutomaticFileSubstitution" = "True"\n        "Octopus.Action.GoogleCloud.ImpersonateServiceAccount"  = "False"\n        "Octopus.Action.Terraform.AllowPluginDownloads"         = "True"\n      }}\n      environments          = []\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n      features              = []\n\n      primary_package {{\n        package_id           = "terraform"\n        acquisition_location = "Server"\n        feed_id              = data.octopusdeploy_feeds.built_in_feed.feeds[0].id\n        properties           = {{ SelectionMode = "immediate" }}\n      }}\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nresource "octopusdeploy_certificate" "test" {{\n  name                              = "Test"\n  certificate_data                  = "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"\n  password                          = "Password01!"\n  environments                      = []\n  notes                             = "A test certificate"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n}}\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n    // Use the option below when debugging\n    // octopusdeploy = {{ source = "octopus.com/com/octopusdeploy" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\n\nresource octopusdeploy_kubernetes_cluster_deployment_target test_eks{{\n  cluster_url                       = "https://cluster"\n  environments                      = ["${{octopusdeploy_environment.test_environment.id}}"]\n  name                              = "Test"\n  roles                             = ["eks"]\n  cluster_certificate               = ""\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  namespace                         = ""\n  skip_tls_verification             = true\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n  uri                               = ""\n\n  endpoint {{\n    communication_style    = "Kubernetes"\n    cluster_certificate    = ""\n    cluster_url            = "https://cluster"\n    namespace              = ""\n    skip_tls_verification  = true\n    default_worker_pool_id = ""\n  }}\n\n  container {{\n    feed_id = ""\n    image   = ""\n  }}\n\n  certificate_authentication {{\n    client_certificate = octopusdeploy_certificate.test.id\n  }}\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_environments" "test" {{\n  ids          = []\n  partial_name = "Test"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_project_groups" "project_group" {{\n  ids          = null\n  partial_name = "Test"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_accounts" "aws_account" {{\n  account_type = "AmazonWebServicesAccount"\n  ids          = []\n  partial_name = "AWS Account"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_accounts" "azure_account" {{\n  account_type = "AzureServicePrincipal"\n  ids          = []\n  partial_name = "Azure Account"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_project" "project_1" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_variable" "amazon_web_services_account_variable" {{\n  owner_id  = octopusdeploy_project.project_1.id\n  type      = "AmazonWebServicesAccount"\n  name      = "AWS"\n  value     = data.octopusdeploy_accounts.aws_account.accounts[0].id\n  scope {{\n    environments = [data.octopusdeploy_environments.test.environments[0].id]\n  }}\n}}\n\nresource "octopusdeploy_variable" "azure_account_variable" {{\n  owner_id  = octopusdeploy_project.project_1.id\n  type      = "AzureAccount"\n  name      = "Azure"\n  value     = data.octopusdeploy_accounts.azure_account.accounts[0].id\n  scope {{\n    environments = [data.octopusdeploy_environments.test.environments[0].id]\n  }}\n}}\n\noutput "octopus_project_1" {{\n  value = octopusdeploy_project.project_1.id\n}}\n\nresource "octopusdeploy_project" "project_2" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project 2"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test 2"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_project_groups" "project_group" {{\n  ids          = null\n  partial_name = "Test"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_kubernetes_cluster_deployment_targets" "test" {{\n  environments = []\n  ids          = []\n  partial_name = "Test"\n  name         = "Test"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_deployment_targets" "ssh" {{\n  partial_name = "Ssh"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_deployment_targets" "polling" {{\n  partial_name = "Polling"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_deployment_targets" "listening" {{\n  partial_name = "Listening"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_deployment_targets" "offline" {{\n  partial_name = "Offline"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_deployment_targets" "azure" {{\n  partial_name = "Azure"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_deployment_targets" "service_facbric" {{\n  partial_name = "ServiceFabric"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_deployment_targets" "webapp" {{\n  partial_name = "WebApp"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_deployment_targets" "cloud" {{\n  partial_name = "Cloud"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_project" "project_1" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_variable" "scoped_var" {{\n  owner_id = octopusdeploy_project.project_1.id\n  type     = "String"\n  name     = "test"\n  value    = "test"\n  scope {{\n    machines = [\n      data.octopusdeploy_kubernetes_cluster_deployment_targets.test.kubernetes_cluster_deployment_targets[0].id,\n      data.octopusdeploy_deployment_targets.cloud.deployment_targets[0].id,\n      data.octopusdeploy_deployment_targets.ssh.deployment_targets[0].id,\n      data.octopusdeploy_deployment_targets.polling.deployment_targets[0].id,\n      data.octopusdeploy_deployment_targets.listening.deployment_targets[0].id,\n      data.octopusdeploy_deployment_targets.offline.deployment_targets[0].id,\n      data.octopusdeploy_deployment_targets.azure.deployment_targets[0].id,\n      data.octopusdeploy_deployment_targets.service_facbric.deployment_targets[0].id,\n      data.octopusdeploy_deployment_targets.webapp.deployment_targets[0].id,\n    ]\n  }}\n}}\n\noutput "octopus_project_1" {{\n  value = octopusdeploy_project.project_1.id\n}}\n\nresource "octopusdeploy_project" "project_2" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project 2"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test 2"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_project_groups" "project_group" {{\n  ids          = null\n  partial_name = "Test"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_certificates" "test" {{\n  archived     = false\n  ids          = []\n  partial_name = "Test"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_project" "project_1" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_variable" "cert_var" {{\n  owner_id = octopusdeploy_project.project_1.id\n  type     = "Certificate"\n  name     = "test"\n  value    = data.octopusdeploy_certificates.test.certificates[0].id\n}}\n\noutput "octopus_project_1" {{\n  value = octopusdeploy_project.project_1.id\n}}\n\nresource "octopusdeploy_project" "project_2" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project 2"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test 2"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_project_groups" "project_group" {{\n  ids          = null\n  partial_name = "Test"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "helm" {{\n  feed_type    = "Helm"\n  ids          = []\n  partial_name = "Helm"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "docker" {{\n  feed_type    = "Docker"\n  ids          = []\n  partial_name = "Docker"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "github" {{\n  feed_type    = "GitHub"\n  ids          = []\n  partial_name = "GitHub"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "maven" {{\n  feed_type    = "Maven"\n  ids          = []\n  partial_name = "Maven"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "nuget" {{\n  feed_type    = "NuGet"\n  ids          = []\n  partial_name = "NuGet"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_worker_pools" "workerpool_default" {{\n  name = "Default Worker Pool"\n  ids  = null\n  skip = 0\n  take = 1\n}}\n\nresource "octopusdeploy_project" "project_1" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_deployment_process" "test" {{\n  project_id = octopusdeploy_project.project_1.id\n\n  step {{\n    condition           = "Success"\n    name                = "Get MySQL Host"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.KubernetesRunScript"\n      name                               = "Get MySQL Host"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = true\n      is_required                        = false\n      worker_pool_id                     = data.octopusdeploy_worker_pools.workerpool_default.worker_pools[0].id\n      properties                         = {{\n        "Octopus.Action.Script.ScriptBody" = "echo \\"hi\\""\n        "Octopus.Action.KubernetesContainers.Namespace" = ""\n        "OctopusUseBundledTooling" = "False"\n        "Octopus.Action.Script.ScriptSource" = "Inline"\n        "Octopus.Action.Script.Syntax" = "Bash"\n      }}\n\n      environments          = []\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n\n      package {{\n        name                      = "package1"\n        package_id                = "package1"\n        acquisition_location      = "Server"\n        extract_during_deployment = false\n        feed_id                   = data.octopusdeploy_feeds.docker.feeds[0].id\n        properties                = {{ Extract = "True", Purpose = "", SelectionMode = "immediate" }}\n      }}\n\n      package {{\n        name                      = "package2"\n        package_id                = "package2"\n        acquisition_location      = "Server"\n        extract_during_deployment = false\n        feed_id                   = data.octopusdeploy_feeds.helm.feeds[0].id\n        properties                = {{ Extract = "True", Purpose = "", SelectionMode = "immediate" }}\n      }}\n\n      package {{\n        name                      = "package3"\n        package_id                = "package3"\n        acquisition_location      = "Server"\n        extract_during_deployment = false\n        feed_id                   = data.octopusdeploy_feeds.maven.feeds[0].id\n        properties                = {{ Extract = "True", Purpose = "", SelectionMode = "immediate" }}\n      }}\n\n      package {{\n        name                      = "package4"\n        package_id                = "package4"\n        acquisition_location      = "Server"\n        extract_during_deployment = false\n        feed_id                   = data.octopusdeploy_feeds.nuget.feeds[0].id\n        properties                = {{ Extract = "True", Purpose = "", SelectionMode = "immediate" }}\n      }}\n\n      package {{\n        name                      = "package5"\n        package_id                = "package5"\n        acquisition_location      = "Server"\n        extract_during_deployment = false\n        feed_id                   = data.octopusdeploy_feeds.github.feeds[0].id\n        properties                = {{ Extract = "True", Purpose = "", SelectionMode = "immediate" }}\n      }}\n\n      features = []\n    }}\n\n    properties   = {{}}\n    target_roles = ["eks"]\n  }}\n}}\n\noutput "octopus_project_1" {{\n  value = octopusdeploy_project.project_1.id\n}}\n\nresource "octopusdeploy_project" "project_2" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project 2"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test 2"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nresource "octopusdeploy_aws_account" "account_aws_account" {{\n  name                              = "AWS Account"\n  description                       = ""\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  access_key                        = "ABCDEFGHIJKLMNOPQRST"\n  secret_key                        = "secretgoeshere"\n}}\n\n\nresource "octopusdeploy_certificate" "certificate_kind_ca" {{\n  name                              = "Test"\n  certificate_data                  = "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"\n  password                          = "Password01!"\n  environments                      = [octopusdeploy_environment.test_environment.id]\n  notes                             = "A test certificate"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n}}\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "blah_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Blah"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_lifecycle" "simple_lifecycle" {{\n  description = "A test lifecycle"\n  name        = "Simple"\n\n  release_retention_policy {{\n    quantity_to_keep    = 1\n\n    unit                = "Days"\n  }}\n\n  tentacle_retention_policy {{\n    quantity_to_keep    = 30\n\n    unit                = "Items"\n  }}\n\n  phase {{\n    automatic_deployment_targets = []\n    optional_deployment_targets  = [octopusdeploy_environment.development_environment.id]\n    name                         = octopusdeploy_environment.development_environment.name\n\n    release_retention_policy {{\n      quantity_to_keep    = 1\n\n      unit                = "Days"\n    }}\n\n    tentacle_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Items"\n    }}\n  }}\n\n  phase {{\n    automatic_deployment_targets = []\n    optional_deployment_targets  = [octopusdeploy_environment.test_environment.id]\n    name                         = octopusdeploy_environment.test_environment.name\n\n    release_retention_policy {{\n      quantity_to_keep    = 1\n\n      unit                = "Days"\n    }}\n\n    tentacle_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Items"\n    }}\n  }}\n\n  phase {{\n    automatic_deployment_targets = []\n    optional_deployment_targets  = [octopusdeploy_environment.production_environment.id]\n    name                         = octopusdeploy_environment.production_environment.name\n\n    release_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Days"\n    }}\n\n    tentacle_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Items"\n    }}\n  }}\n}}\n\nresource "octopusdeploy_lifecycle" "simple_lifecycle2" {{\n  description = "A test lifecycle"\n  name        = "Simple2"\n\n  release_retention_policy {{\n    quantity_to_keep    = 1\n\n    unit                = "Days"\n  }}\n\n  tentacle_retention_policy {{\n    quantity_to_keep    = 30\n\n    unit                = "Items"\n  }}\n\n  phase {{\n    automatic_deployment_targets = []\n    optional_deployment_targets  = [octopusdeploy_environment.development_environment.id]\n    name                         = octopusdeploy_environment.development_environment.name\n\n    release_retention_policy {{\n      quantity_to_keep    = 1\n\n      unit                = "Days"\n    }}\n\n    tentacle_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Items"\n    }}\n  }}\n\n  phase {{\n    automatic_deployment_targets = []\n    optional_deployment_targets  = [octopusdeploy_environment.test_environment.id]\n    name                         = octopusdeploy_environment.test_environment.name\n\n    release_retention_policy {{\n      quantity_to_keep    = 1\n\n      unit                = "Days"\n    }}\n\n    tentacle_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Items"\n    }}\n  }}\n\n  phase {{\n    automatic_deployment_targets = []\n    optional_deployment_targets  = [octopusdeploy_environment.production_environment.id]\n    name                         = octopusdeploy_environment.production_environment.name\n\n    release_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Days"\n    }}\n\n    tentacle_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Items"\n    }}\n  }}\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\n\nresource octopusdeploy_kubernetes_cluster_deployment_target test_eks{{\n  cluster_url                       = "https://cluster"\n  environments                      = [octopusdeploy_environment.test_environment.id]\n  name                              = "Test"\n  roles                             = ["eks"]\n  cluster_certificate               = octopusdeploy_certificate.certificate_kind_ca.id\n  machine_policy_id                 = data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id\n  namespace                         = ""\n  skip_tls_verification             = false\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n  uri                               = ""\n\n  endpoint {{\n    communication_style    = "Kubernetes"\n  }}\n\n  container {{\n    feed_id = ""\n    image   = ""\n  }}\n\n  aws_account_authentication {{\n    account_id        = octopusdeploy_aws_account.account_aws_account.id\n    cluster_name      = "clustername"\n    assume_role       = false\n    use_instance_role = false\n  }}\n}}\n\nresource "octopusdeploy_cloud_region_deployment_target" "target_region1" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "CloudRegion"\n  roles                             = ["cloud"]\n  default_worker_pool_id            = ""\n  health_status                     = "Healthy"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n}}\n\nresource "octopusdeploy_ssh_key_account" "account_ec2_sydney" {{\n  name                              = "ec2 sydney"\n  description                       = ""\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  private_key_file                  = "whatever"\n  username                          = "ec2-user"\n  private_key_passphrase            = "whatever"\n}}\n\nresource "octopusdeploy_ssh_connection_deployment_target" "ssh" {{\n  account_id            = octopusdeploy_ssh_key_account.account_ec2_sydney.id\n  environments          = [octopusdeploy_environment.development_environment.id]\n  fingerprint           = "d5:6b:a3:78:fa:fe:f5:ad:d4:79:4a:57:35:6a:32:ef"\n  host                  = "3.25.215.87"\n  name                  = "Ssh"\n  roles                 = ["vm"]\n  dot_net_core_platform = "linux-x64"\n  machine_policy_id     = data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id\n}}\n\nresource "octopusdeploy_listening_tentacle_deployment_target" "listening" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "Listening"\n  roles                             = ["vm"]\n  tentacle_url                      = "https://tentacle/"\n  thumbprint                        = "55E05FD1B0F76E60F6DA103988056CE695685FD1"\n  is_disabled                       = false\n  is_in_process                     = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n\n  tentacle_version_details {{\n  }}\n}}\n\nresource "octopusdeploy_polling_tentacle_deployment_target" "polling" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "Polling"\n  roles                             = ["vm"]\n  tentacle_url                      = "poll://abcdefghijklmnopqrst/"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "PowerShell"\n  shell_version                     = "5.1.22621.1"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n\n  tentacle_version_details {{\n  }}\n\n  thumbprint = "1854A302E5D9EAC1CAA3DA1F5249F82C28BB2B86"\n}}\n\nresource "octopusdeploy_offline_package_drop_deployment_target" "target_offlineoffline" {{\n  applications_directory            = "c:\\\\temp"\n  working_directory                 = "c:\\\\temp"\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "Offline"\n  roles                             = ["offline"]\n  health_status                     = "Healthy"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n}}\n\nresource "octopusdeploy_azure_subscription_account" "account_subscription" {{\n  description                       = "A test account"\n  name                              = "Subscription"\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  storage_endpoint_suffix           = "whatever"\n  subscription_id                   = "fde6a0ae-a1d4-40ae-91de-88f4ed898c03"\n  azure_environment                 = "AzureCloud"\n  management_endpoint               = "whatever"\n  certificate                       = "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"\n}}\n\nresource "octopusdeploy_azure_cloud_service_deployment_target" "azure" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "Azure"\n  roles                             = ["cloud"]\n  account_id                        = "${{octopusdeploy_azure_subscription_account.account_subscription.id}}"\n  cloud_service_name                = "servicename"\n  storage_account_name              = "accountname"\n  default_worker_pool_id            = ""\n  health_status                     = "Unhealthy"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n  use_current_instance_count        = true\n}}\n\nresource "octopusdeploy_azure_service_fabric_cluster_deployment_target" "target_service_fabric" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "ServiceFabric"\n  roles                             = ["cloud"]\n  connection_endpoint               = "http://endpoint"\n  aad_client_credential_secret      = ""\n  aad_credential_type               = "UserCredential"\n  aad_user_credential_password      = "passwword"\n  aad_user_credential_username      = "username"\n  certificate_store_location        = ""\n  certificate_store_name            = ""\n  client_certificate_variable       = ""\n  health_status                     = "Unhealthy"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n}}\n\nresource "octopusdeploy_azure_service_principal" "account_sales_account" {{\n  name                              = "Sales Account"\n  description                       = ""\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  application_id                    = "08a4a027-6f2a-4793-a0e5-e59a3c79189f"\n  password                          = "Password"\n  subscription_id                   = "3b50dcf4-f74d-442e-93cb-301b13e1e2d5"\n  tenant_id                         = "3d13e379-e666-469e-ac38-ec6fd61c1166"\n}}\n\nresource "octopusdeploy_azure_web_app_deployment_target" "target_web_app" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "WebApp"\n  roles                             = ["cloud"]\n  account_id                        = "${{octopusdeploy_azure_service_principal.account_sales_account.id}}"\n  resource_group_name               = "mattc-webapp"\n  web_app_name                      = "mattc-webapp"\n  health_status                     = "Unhealthy"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n  web_app_slot_name                 = "slot1"\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nresource "octopusdeploy_project" "project_1" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = octopusdeploy_lifecycle.simple_lifecycle.id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_variable" "scoped_var" {{\n  owner_id = octopusdeploy_project.project_1.id\n  type     = "String"\n  name     = "test"\n  value    = "test"\n  scope {{\n    machines = [\n      octopusdeploy_azure_cloud_service_deployment_target.azure.id,\n      octopusdeploy_azure_service_fabric_cluster_deployment_target.target_service_fabric.id,\n      octopusdeploy_azure_web_app_deployment_target.target_web_app.id,\n      octopusdeploy_cloud_region_deployment_target.target_region1.id,\n      octopusdeploy_kubernetes_cluster_deployment_target.test_eks.id,\n      octopusdeploy_listening_tentacle_deployment_target.listening.id,\n      octopusdeploy_offline_package_drop_deployment_target.target_offlineoffline.id,\n      octopusdeploy_polling_tentacle_deployment_target.polling.id,\n      octopusdeploy_ssh_connection_deployment_target.ssh.id\n    ]\n  }}\n}}\n\noutput "octopus_project_1" {{\n  value = octopusdeploy_project.project_1.id\n}}\n\nresource "octopusdeploy_project" "project_2" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project 2"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = octopusdeploy_lifecycle.simple_lifecycle2.id\n  name                                 = "Test 2"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "built_in_feed" {{\n  feed_type    = "BuiltIn"\n  ids          = null\n  partial_name = ""\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_static_worker_pool" "workerpool_docker" {{\n  name        = "Docker"\n  description = "A test worker pool"\n  is_default  = true\n  sort_order  = 3\n}}\n\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_deployment_process" "deploy_backend" {{\n  project_id = octopusdeploy_project.deploy_frontend_project.id\n\n  step {{\n    condition           = "Success"\n    name                = "Test"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.AwsRunCloudFormation"\n      name                               = "Test"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = false\n      properties                         = {{ "Octopus.Action.Aws.AssumeRole" = "False", "Octopus.Action.Aws.CloudFormation.Tags" = "[{{\\"key\\":\\"Environment\\",\\"value\\":\\"#{{Octopus.Environment.Name | Replace \\\\\\" .*\\\\\\" \\\\\\"\\\\\\"}}\\"}},{{\\"key\\":\\"DeploymentProject\\",\\"value\\":\\"API_Gateway\\"}}]", "Octopus.Action.Aws.CloudFormationStackName" = "OctopusBuilder-APIGateway-mcasperson-#{{Octopus.Environment.Name | Replace \\" .*\\" \\"\\" | ToLower}}", "Octopus.Action.Aws.CloudFormationTemplate" = "Resources:\\n  RestApi:\\n    Type: \'AWS::ApiGateway::RestApi\'\\n    Properties:\\n      Description: $${{CFproperty}}\\n      Name: Octopus Workflow Builder\\n      BinaryMediaTypes:\\n        - \'*/*\'\\n      EndpointConfiguration:\\n        Types:\\n          - REGIONAL\\n  Health:\\n    Type: \'AWS::ApiGateway::Resource\'\\n    Properties:\\n      RestApiId:\\n        Ref: RestApi\\n      ParentId:\\n        \'Fn::GetAtt\':\\n          - RestApi\\n          - RootResourceId\\n      PathPart: health\\n  Api:\\n    Type: \'AWS::ApiGateway::Resource\'\\n    Properties:\\n      RestApiId:\\n        Ref: RestApi\\n      ParentId:\\n        \'Fn::GetAtt\':\\n          - RestApi\\n          - RootResourceId\\n      PathPart: api\\n  Web:\\n    Type: \'AWS::ApiGateway::Resource\'\\n    Properties:\\n      RestApiId: !Ref RestApi\\n      ParentId: !GetAtt\\n        - RestApi\\n        - RootResourceId\\n      PathPart: \'{{proxy+}}\'\\nOutputs:\\n  RestApi:\\n    Description: The REST API\\n    Value: !Ref RestApi\\n  RootResourceId:\\n    Description: ID of the resource exposing the root resource id\\n    Value:\\n      \'Fn::GetAtt\':\\n        - RestApi\\n        - RootResourceId\\n  Health:\\n    Description: ID of the resource exposing the health endpoints\\n    Value: !Ref Health\\n  Api:\\n    Description: ID of the resource exposing the api endpoint\\n    Value: !Ref Api\\n  Web:\\n    Description: ID of the resource exposing the web app frontend\\n    Value: !Ref Web\\n", "Octopus.Action.Aws.CloudFormationTemplateParameters" = "[]", "Octopus.Action.Aws.CloudFormationTemplateParametersRaw" = "[]", "Octopus.Action.Aws.Region" = "ap-southeast-2", "Octopus.Action.Aws.TemplateSource" = "Inline", "Octopus.Action.Aws.WaitForCompletion" = "True", "Octopus.Action.AwsAccount.UseInstanceRole" = "False", "Octopus.Action.AwsAccount.Variable" = "AWS Account" }}\n      environments                       = []\n      excluded_environments              = []\n      channels                           = []\n      tenant_tags                        = []\n      features                           = []\n      package {{\n        name                      = "test"\n        package_id                = "test"\n        feed_id                   = data.octopusdeploy_feeds.built_in_feed.feeds[0].id\n        acquisition_location      = "Server"\n        extract_during_deployment = true\n      }}\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nresource "octopusdeploy_azure_service_principal" "account_azure" {{\n  description                       = "Azure Account"\n  name                              = "Azure Account"\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  application_id                    = "2eb8bd13-661e-489c-beb9-4103efb9dbdd"\n  password                          = "secretgoeshere"\n  subscription_id                   = "95bf77d2-64b1-4ed2-9de1-b5451e3881f5"\n  tenant_id                         = "18eb006b-c3c8-4a72-93cd-fe4b293f82ee"\n}}\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\n\nresource octopusdeploy_kubernetes_cluster_deployment_target test_k8s {{\n  cluster_url                       = "https://cluster"\n  environments                      = [octopusdeploy_environment.test_environment.id]\n  name                              = "Test"\n  roles                             = ["eks"]\n  cluster_certificate               = ""\n  machine_policy_id                 = data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id\n  namespace                         = ""\n  skip_tls_verification             = true\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n  uri                               = ""\n\n  container {{\n    feed_id = ""\n    image   = ""\n  }}\n\n  azure_service_principal_authentication {{\n    account_id             = octopusdeploy_azure_service_principal.account_azure.id\n    cluster_name           = "mycluster"\n    cluster_resource_group = "myresourcegroup"\n  }}\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_gcp_account" "account_google" {{\n  description                       = "A test account"\n  name                              = "Google"\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  json_key                          = "secretgoeshere"\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\n\nresource octopusdeploy_kubernetes_cluster_deployment_target test_k8s {{\n  cluster_url                       = "https://cluster"\n  environments                      = [octopusdeploy_environment.test_environment.id]\n  name                              = "Test"\n  roles                             = ["eks"]\n  cluster_certificate               = ""\n  machine_policy_id                 = data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id\n  namespace                         = ""\n  skip_tls_verification             = true\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n  uri                               = ""\n\n  container {{\n    feed_id = ""\n    image   = ""\n  }}\n\n  gcp_account_authentication {{\n    account_id   = octopusdeploy_gcp_account.account_google.id\n    cluster_name = "mycluster"\n    project      = "myproject"\n    region       = "region"\n  }}\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\n\nresource octopusdeploy_kubernetes_cluster_deployment_target test_k8s {{\n  cluster_url                       = "https://cluster"\n  environments                      = [octopusdeploy_environment.test_environment.id]\n  name                              = "Test"\n  roles                             = ["eks"]\n  cluster_certificate               = ""\n  machine_policy_id                 = data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id\n  namespace                         = ""\n  skip_tls_verification             = true\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n  uri                               = ""\n\n  container {{\n    feed_id = ""\n    image   = ""\n  }}\n\n  authentication {{\n    account_id   = octopusdeploy_token_account.account_autopilot_service_account.id\n  }}\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_token_account" "account_autopilot_service_account" {{\n  description                       = "A test account"\n  name                              = "Token"\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  token                             = "secretgoeshere"\n}}\n###'),
        ('system',
         'HCL: ###\nresource "octopusdeploy_certificate" "certificate_kind_ca" {{\n  name                              = "Test"\n  certificate_data                  = "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"\n  password                          = "Password01!"\n  environments                      = []\n  notes                             = "A test certificate"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n}}\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\n\nresource octopusdeploy_kubernetes_cluster_deployment_target test_k8s {{\n  cluster_url                       = "https://cluster"\n  environments                      = [octopusdeploy_environment.test_environment.id]\n  name                              = "Test"\n  roles                             = ["eks"]\n  cluster_certificate               = ""\n  machine_policy_id                 = data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id\n  namespace                         = ""\n  skip_tls_verification             = true\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n  uri                               = ""\n\n  container {{\n    feed_id = ""\n    image   = ""\n  }}\n\n  certificate_authentication {{\n    client_certificate    = octopusdeploy_certificate.certificate_kind_ca.id\n  }}\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Tenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = [octopusdeploy_library_variable_set.library_variable_set_variables_variableset.id]\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_tag_set" "tagset_tag1" {{\n  name        = "tag1"\n  description = "Test tagset"\n  sort_order  = 0\n}}\n\nresource "octopusdeploy_tag" "tag_a" {{\n  name        = "a"\n  color       = "#333333"\n  description = "tag a"\n  sort_order  = 2\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag" "tag_b" {{\n  name        = "b"\n  color       = "#333333"\n  description = "tag b"\n  sort_order  = 3\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tenant" "tenant_team_a" {{\n  name        = "Team A"\n  description = "Test tenant"\n  tenant_tags = ["tag1/a", "tag1/b"]\n  depends_on = [octopusdeploy_tag.tag_a, octopusdeploy_tag.tag_b]\n}}\n\nresource "octopusdeploy_tenant_project" "tenanta_project" {{\n  environment_ids = [octopusdeploy_environment.test_environment.id, octopusdeploy_environment.development_environment.id, octopusdeploy_environment.production_environment.id]\n  project_id   = octopusdeploy_project.deploy_frontend_project.id\n  tenant_id = octopusdeploy_tenant.tenant_team_a.id\n}}\n\nresource "octopusdeploy_tenant_common_variable" "tenantcommonvariable1_variablea" {{\n  library_variable_set_id = "${{octopusdeploy_library_variable_set.library_variable_set_variables_variableset.id}}"\n  template_id             = "${{octopusdeploy_library_variable_set.library_variable_set_variables_variableset.template[0].id}}"\n  tenant_id               = "${{octopusdeploy_tenant.tenant_team_a.id}}"\n  value                   = "Override Variable A"\n  depends_on = [octopusdeploy_tenant_project.tenanta_project]\n}}\n\nresource "octopusdeploy_tenant_common_variable" "tenantcommonvariable1_variableb" {{\n  library_variable_set_id = "${{octopusdeploy_library_variable_set.library_variable_set_variables_variableset.id}}"\n  template_id             = "${{octopusdeploy_library_variable_set.library_variable_set_variables_variableset.template[1].id}}"\n  tenant_id               = "${{octopusdeploy_tenant.tenant_team_a.id}}"\n  value                   = "Override Variable B"\n  depends_on = [octopusdeploy_tenant_project.tenanta_project]\n}}\n\nresource "octopusdeploy_tenant_common_variable" "tenantcommonvariable1_secret" {{\n  library_variable_set_id = "${{octopusdeploy_library_variable_set.library_variable_set_variables_variableset.id}}"\n  template_id             = "${{octopusdeploy_library_variable_set.library_variable_set_variables_variableset.template[2].id}}"\n  tenant_id               = "${{octopusdeploy_tenant.tenant_team_a.id}}"\n  value                   = "Override Secret"\n  depends_on = [octopusdeploy_tenant_project.tenanta_project]\n}}\n\nresource "octopusdeploy_library_variable_set" "library_variable_set_variables_variableset" {{\n  name        = "VariableSet"\n  description = ""\n\n  template {{\n    name             = "VariableA"\n    label            = "This is a variable"\n    default_value    = "a"\n    help_text = "This is help text"\n    display_settings = {{ "Octopus.ControlType" = "SingleLineText" }}\n  }}\n  template {{\n    name             = "VariableB"\n    label            = "This is a variable"\n    default_value    = "b"\n    help_text = "This is help text"\n    display_settings = {{ "Octopus.ControlType" = "SingleLineText" }}\n  }}\n  template {{\n    name             = "secret"\n    label            = "This is a secret variable"\n    default_value    = "a secret"\n    help_text = "This is help text"\n    display_settings = {{ "Octopus.ControlType" = "Sensitive" }}\n  }}\n}}\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_project_groups" "project_group" {{\n  ids          = null\n  partial_name = "Test"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "helm" {{\n  feed_type    = "Helm"\n  ids          = []\n  partial_name = "Helm"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "docker" {{\n  feed_type    = "Docker"\n  ids          = []\n  partial_name = "Docker"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "github" {{\n  feed_type    = "GitHub"\n  ids          = []\n  partial_name = "GitHub"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "maven" {{\n  feed_type    = "Maven"\n  ids          = []\n  partial_name = "Maven"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "nuget" {{\n  feed_type    = "NuGet"\n  ids          = []\n  partial_name = "NuGet"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_worker_pools" "workerpool_default" {{\n  name = "Default Worker Pool"\n  ids  = null\n  skip = 0\n  take = 1\n}}\n\ndata "octopusdeploy_library_variable_sets" "script_module" {{\n  partial_name = "Script Module"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_project" "project_1" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = [data.octopusdeploy_library_variable_sets.script_module.library_variable_sets[0].id]\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_deployment_process" "test" {{\n  project_id = octopusdeploy_project.project_1.id\n\n  step {{\n    condition           = "Success"\n    name                = "Get MySQL Host"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.KubernetesRunScript"\n      name                               = "Get MySQL Host"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = true\n      is_required                        = false\n      worker_pool_id                     = data.octopusdeploy_worker_pools.workerpool_default.worker_pools[0].id\n      properties                         = {{\n        "Octopus.Action.Script.ScriptBody" = "echo \\"hi\\""\n        "Octopus.Action.KubernetesContainers.Namespace" = ""\n        "OctopusUseBundledTooling" = "False"\n        "Octopus.Action.Script.ScriptSource" = "Inline"\n        "Octopus.Action.Script.Syntax" = "Bash"\n      }}\n\n      environments          = []\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n\n      features = []\n    }}\n\n    properties   = {{}}\n    target_roles = ["eks"]\n  }}\n}}\n\noutput "octopus_project_1" {{\n  value = octopusdeploy_project.project_1.id\n}}\n\nresource "octopusdeploy_project" "project_2" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project 2"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test 2"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = [octopusdeploy_script_module.library_variable_set_test2.id]\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\nresource "octopusdeploy_script_module" "library_variable_set_test2" {{\n  description = "Test script module"\n  name        = "Script Module"\n\n  script {{\n    body   = "echo \\"hi\\""\n    syntax = "PowerShell"\n  }}\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_project_groups" "project_group" {{\n  ids          = null\n  partial_name = "Test"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_project" "project_1" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_variable" "scoped_var" {{\n  owner_id = octopusdeploy_project.project_1.id\n  type     = "String"\n  name     = "test"\n  value    = "test"\n  scope {{\n    tenant_tags = ["tag1/a"]\n  }}\n}}\n\noutput "octopus_project_1" {{\n  value = octopusdeploy_project.project_1.id\n}}\n\nresource "octopusdeploy_project" "project_2" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project 2"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test 2"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_project_groups" "project_group" {{\n  ids          = null\n  partial_name = "Test"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_project" "project_1" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\ndata "octopusdeploy_deployment_targets" "cloud" {{\n  partial_name = "CloudRegion"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_variable" "scoped_var" {{\n  owner_id = octopusdeploy_project.project_1.id\n  type     = "String"\n  name     = "test"\n  value    = "test"\n  scope {{\n    tenant_tags = ["tag1/a"]\n    machines = [data.octopusdeploy_deployment_targets.cloud.deployment_targets[0].id]\n  }}\n}}\n\noutput "octopus_project_1" {{\n  value = octopusdeploy_project.project_1.id\n}}\n\nresource "octopusdeploy_project" "project_2" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project 2"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test 2"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Tenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_project" "project2" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test2"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Tenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_tag_set" "tagset_tag1" {{\n  name        = "tag1"\n  description = "Test tagset"\n  sort_order  = 0\n}}\n\nresource "octopusdeploy_tag" "tag_a" {{\n  name        = "a"\n  color       = "#333333"\n  description = "tag a"\n  sort_order  = 2\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag" "tag_b" {{\n  name        = "b"\n  color       = "#333333"\n  description = "tag b"\n  sort_order  = 3\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tenant" "tenant_team_a" {{\n  name        = "Team A"\n  description = "Test tenant"\n  tenant_tags = ["tag1/a", "tag1/b"]\n  depends_on = [octopusdeploy_tag.tag_a, octopusdeploy_tag.tag_b]\n}}\n\nresource "octopusdeploy_tenant_project" "tenanta_project1" {{\n  environment_ids = [octopusdeploy_environment.test_environment.id, octopusdeploy_environment.development_environment.id, octopusdeploy_environment.production_environment.id]\n  project_id   = octopusdeploy_project.deploy_frontend_project.id\n  tenant_id =  octopusdeploy_tenant.tenant_team_a.id\n}}\n\nresource "octopusdeploy_tenant_project" "tenanta_project2" {{\n  environment_ids = [octopusdeploy_environment.test_environment.id, octopusdeploy_environment.development_environment.id, octopusdeploy_environment.production_environment.id]\n  project_id   = octopusdeploy_project.project2.id\n  tenant_id =  octopusdeploy_tenant.tenant_team_a.id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_project" "project_1" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_variable" "scoped_var" {{\n  owner_id = octopusdeploy_project.project_1.id\n  type     = "String"\n  name     = "test"\n  value    = octopusdeploy_token_account.account_autopilot_service_account.id\n}}\n\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_tenant" "tenant_team_a" {{\n  name        = "Team A"\n  description = "Test tenant"\n  tenant_tags = []\n  depends_on = []\n}}\n\n\nresource "octopusdeploy_token_account" "account_autopilot_service_account" {{\n  description                       = "A test account"\n  name                              = "Token"\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = [octopusdeploy_tenant.tenant_team_a.id]\n  tenanted_deployment_participation = "Untenanted"\n  token                             = "secretgoeshere"\n}}\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n    // Use the option below when debugging\n    // octopusdeploy = {{ source = "octopus.com/com/octopusdeploy" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\n\nresource octopusdeploy_kubernetes_cluster_deployment_target test_eks {{\n  cluster_url                       = "https://cluster"\n  environments                      = [octopusdeploy_environment.test_environment.id]\n  name                              = "Test"\n  roles                             = ["eks"]\n  cluster_certificate               = ""\n  cluster_certificate_path          = "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"\n  machine_policy_id                 = data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id\n  namespace                         = ""\n  skip_tls_verification             = true\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n  uri                               = ""\n\n  container {{\n    feed_id = ""\n    image   = ""\n  }}\n\n  endpoint {{\n    communication_style    = "Kubernetes"\n  }}\n\n  pod_authentication {{\n    token_path = "/var/run/secrets/kubernetes.io/serviceaccount/token"\n  }}\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n\n  template {{\n    name             = "Project Template Variable"\n    label            = "Test"\n    default_value    = "Test"\n    help_text = "help text goes here"\n    display_settings = {{ "Octopus.ControlType" = "Sensitive" }}\n  }}\n\n  template {{\n    name             = "Project Template Variable 2"\n    label            = "Test2"\n    default_value    = "Test2"\n    help_text = "help text goes here"\n    display_settings = {{ "Octopus.ControlType" = "SingleLineText" }}\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_docker_container_registry" "feed_docker" {{\n  name                                 = "Docker"\n  api_version                          = "v1"\n  feed_uri                             = "https://index.docker.io"\n  package_acquisition_location_options = ["ExecutionTarget", "NotAcquired"]\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###'),
        ('system',
         'HCL: ###\nresource "octopusdeploy_certificate" "certificate_kind_ca" {{\n  name                              = "Test"\n  certificate_data                  = "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"\n  password                          = "Password01!"\n  environments                      = []\n  notes                             = "A test certificate"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n}}\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Tenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_tag_set" "tagset_tag1" {{\n  name        = "tag1"\n  description = "Test tagset"\n  sort_order  = 0\n}}\n\nresource "octopusdeploy_tag" "tag_a" {{\n  name        = "a"\n  color       = "#333333"\n  description = "tag a"\n  sort_order  = 2\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag" "tag_b" {{\n  name        = "b"\n  color       = "#333333"\n  description = "tag b"\n  sort_order  = 3\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tenant" "tenant_team_a" {{\n  name        = "Team A"\n  description = "Test tenant"\n  tenant_tags = ["tag1/a", "tag1/b"]\n  depends_on = [octopusdeploy_tag.tag_a, octopusdeploy_tag.tag_b]\n}}\n\nresource "octopusdeploy_tenant_project" "tenanta_project" {{\n  environment_ids = [octopusdeploy_environment.test_environment.id, octopusdeploy_environment.development_environment.id, octopusdeploy_environment.production_environment.id]\n  project_id   = octopusdeploy_project.deploy_frontend_project.id\n  tenant_id =  octopusdeploy_tenant.tenant_team_a.id\n}}\n###'),
        ('system',
         'HCL: ###\nresource "octopusdeploy_aws_account" "account_aws_account" {{\n  name                              = "AWS Account"\n  description                       = ""\n  environments                      = null\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n  tenants                           = null\n  tenanted_deployment_participation = "Tenanted"\n  access_key                        = "ABCDEFGHIJKLMNOPQRST"\n  secret_key                        = "secretgoeshere"\n}}\n\n\nresource "octopusdeploy_azure_cloud_service_deployment_target" "target_azure" {{\n  environments                      = [octopusdeploy_environment.development_environment.id]\n  name                              = "Azure"\n  roles                             = ["cloud"]\n  account_id                        = octopusdeploy_azure_subscription_account.account_subscription.id\n  cloud_service_name                = "servicename"\n  storage_account_name              = "accountname"\n  default_worker_pool_id            = ""\n  health_status                     = "Unhealthy"\n  is_disabled                       = false\n  machine_policy_id                 = data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenanted_deployment_participation = "Tenanted"\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n  thumbprint                        = ""\n  use_current_instance_count        = true\n}}\n\nresource "octopusdeploy_azure_service_principal" "account_azure" {{\n  description                       = "Azure Account"\n  name                              = "Azure"\n  environments                      = [octopusdeploy_environment.test_environment.id]\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n  tenanted_deployment_participation = "Tenanted"\n  application_id                    = "2eb8bd13-661e-489c-beb9-4103efb9dbdd"\n  password                          = "secretgoeshere"\n  subscription_id                   = "95bf77d2-64b1-4ed2-9de1-b5451e3881f5"\n  tenant_id                         = "18eb006b-c3c8-4a72-93cd-fe4b293f82ee"\n}}\n\nresource "octopusdeploy_azure_subscription_account" "account_subscription" {{\n  description                       = "A test account"\n  name                              = "Subscription"\n  environments                      = null\n  tenants                           = null\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n  tenanted_deployment_participation = "Tenanted"\n  storage_endpoint_suffix           = "storage_endpoint_suffix"\n  subscription_id                   = "fde6a0ae-a1d4-40ae-91de-88f4ed898c03"\n  azure_environment                 = "AzureCloud"\n  management_endpoint               = "management_endpoint"\n  certificate                       = "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"\n}}\n\nresource "octopusdeploy_certificate" "certificate_kind_ca" {{\n  name                              = "Test"\n  certificate_data                  = "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"\n  password                          = "Password01!"\n  environments                      = []\n  notes                             = "A test certificate"\n  tenant_tags                       = ["type with space/a with space"]\n  tenanted_deployment_participation = "Tenanted"\n  tenants                           = []\n  depends_on                        = [octopusdeploy_tag.tag_a]\n}}\n\n\nresource "octopusdeploy_cloud_region_deployment_target" "target_region1" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "cloud"\n  roles                             = ["cloud"]\n  default_worker_pool_id            = ""\n  health_status                     = "Healthy"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenanted_deployment_participation = "Tenanted"\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n  tenants                           = []\n  thumbprint                        = ""\n}}\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.22.0" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_gcp_account" "account_google" {{\n  description                       = "A test account"\n  name                              = "Google"\n  environments                      = null\n  tenants                           = null\n  json_key                          = "secretgoeshere"\n  tenanted_deployment_participation = "Tenanted"\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\n\nresource octopusdeploy_kubernetes_cluster_deployment_target test_eks {{\n  cluster_url                       = "https://cluster"\n  environments                      = [octopusdeploy_environment.test_environment.id]\n  name                              = "Test"\n  roles                             = ["eks"]\n  cluster_certificate               = ""\n  cluster_certificate_path          = "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"\n  machine_policy_id                 = data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id\n  namespace                         = ""\n  skip_tls_verification             = true\n  tenanted_deployment_participation = "Tenanted"\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n  tenants                           = []\n  thumbprint                        = ""\n  uri                               = ""\n\n  container {{\n    feed_id = ""\n    image   = ""\n  }}\n\n  endpoint {{\n    communication_style    = "Kubernetes"\n  }}\n\n  pod_authentication {{\n    token_path = "/var/run/secrets/kubernetes.io/serviceaccount/token"\n  }}\n}}\n\nresource "octopusdeploy_listening_tentacle_deployment_target" "target_vm_listening_ngrok" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "listening"\n  roles                             = ["vm"]\n  tentacle_url                      = "https://tentacle/"\n  thumbprint                        = "55E05FD1B0F76E60F6DA103988056CE695685FD1"\n  is_disabled                       = false\n  is_in_process                     = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenanted_deployment_participation = "Tenanted"\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n  tenants                           = []\n\n  tentacle_version_details {{\n  }}\n}}\n\n\nresource "octopusdeploy_offline_package_drop_deployment_target" "target_offline" {{\n  applications_directory            = "c:\\\\temp"\n  working_directory                 = "c:\\\\temp"\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "offline"\n  roles                             = ["offline"]\n  health_status                     = "Healthy"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenanted_deployment_participation = "Tenanted"\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n  tenants                           = []\n}}\n\nresource "octopusdeploy_polling_tentacle_deployment_target" "target_desktop_3e4k4r8" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "polling"\n  roles                             = ["vm"]\n  tentacle_url                      = "poll://abcdefghijklmnopqrst/"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "PowerShell"\n  shell_version                     = "5.1.22621.1"\n  tenanted_deployment_participation = "Tenanted"\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n  tenants                           = []\n\n  tentacle_version_details {{\n  }}\n\n  thumbprint = "1854A302E5D9EAC1CAA3DA1F5249F82C28BB2B86"\n}}\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_worker_pools" "workerpool_default" {{\n  name = "Default Worker Pool"\n  ids  = null\n  skip = 0\n  take = 1\n}}\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Tenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_deployment_process" "test" {{\n  project_id = octopusdeploy_project.deploy_frontend_project.id\n  depends_on = [octopusdeploy_tag.tag_a]\n\n  step {{\n    condition           = "Success"\n    name                = "Get MySQL Host"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.KubernetesRunScript"\n      name                               = "Get MySQL Host"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = true\n      is_required                        = false\n      worker_pool_id                     = data.octopusdeploy_worker_pools.workerpool_default.worker_pools[0].id\n      properties                         = {{\n        "Octopus.Action.Script.ScriptBody"              = "echo \\"hi\\""\n        "Octopus.Action.KubernetesContainers.Namespace" = ""\n        "OctopusUseBundledTooling"                      = "False"\n        "Octopus.Action.Script.ScriptSource"            = "Inline"\n        "Octopus.Action.Script.Syntax"                  = "Bash"\n      }}\n\n      environments          = []\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = ["type with space/a with space"]\n\n      features = []\n    }}\n\n    properties   = {{}}\n    target_roles = ["eks"]\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\nresource "octopusdeploy_azure_service_fabric_cluster_deployment_target" "target_service_fabric" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "Service Fabric"\n  roles                             = ["cloud"]\n  connection_endpoint               = "http://endpoint"\n  aad_client_credential_secret      = ""\n  aad_credential_type               = "UserCredential"\n  aad_user_credential_password      = "${{var.target_service_fabric}}"\n  aad_user_credential_username      = "username"\n  certificate_store_location        = ""\n  certificate_store_name            = ""\n  client_certificate_variable       = ""\n  health_status                     = "Unhealthy"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenanted_deployment_participation = "Tenanted"\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n  tenants                           = []\n  thumbprint                        = ""\n}}\nvariable "target_service_fabric" {{\n  type        = string\n  nullable    = true\n  sensitive   = true\n  description = "The secret variable value associated with the target \\"Service Fabric\\""\n}}\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_ssh_key_account" "account_ec2_sydney" {{\n  name                              = "ec2 sydney"\n  description                       = ""\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  private_key_file                  = "${{var.account_ec2_sydney_cert}}"\n  username                          = "ec2-user"\n  private_key_passphrase            = "${{var.account_ec2_sydney}}"\n}}\nvariable "account_ec2_sydney" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The password associated with the certificate for account ec2 sydney"\n}}\nvariable "account_ec2_sydney_cert" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The certificate file for account ec2 sydney"\n}}\n\nresource "octopusdeploy_ssh_connection_deployment_target" "target_3_25_215_87" {{\n  account_id                        = "${{octopusdeploy_ssh_key_account.account_ec2_sydney.id}}"\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  fingerprint                       = "d5:6b:a3:78:fa:fe:f5:ad:d4:79:4a:57:35:6a:32:ef"\n  host                              = "3.25.215.87"\n  name                              = "sshtarget"\n  roles                             = ["vm"]\n  dot_net_core_platform             = "linux-x64"\n  machine_policy_id                 = data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id\n  tenanted_deployment_participation = "Tenanted"\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n}}\n\nresource "octopusdeploy_ssh_key_account" "account_ssh" {{\n  description                       = "A test account"\n  name                              = "SSH"\n  environments                      = null\n  tenanted_deployment_participation = "Tenanted"\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n  tenants                           = null\n  private_key_file                  = "unused"\n  username                          = "admin"\n  # Because of https://github.com/OctopusDeployLabs/terraform-provider-octopusdeploy/issues/343\n  private_key_passphrase            = "LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0KYjNCbGJuTnphQzFyWlhrdGRqRUFBQUFBQkc1dmJtVUFBQUFFYm05dVpRQUFBQUFBQUFBQkFBQUJGd0FBQUFkemMyZ3RjbgpOaEFBQUFBd0VBQVFBQUFRRUF5c25PVXhjN0tJK2pIRUc5RVEwQXFCMllGRWE5ZnpZakZOY1pqY1dwcjJQRkRza25oOUpTCm1NVjVuZ2VrbTRyNHJVQU5tU2dQMW1ZTGo5TFR0NUVZa0N3OUdyQ0paNitlQTkzTEowbEZUamFkWEJuQnNmbmZGTlFWYkcKZ2p3U1o4SWdWQ2oySXE0S1hGZm0vbG1ycEZQK2Jqa2V4dUxwcEh5dko2ZmxZVjZFMG13YVlneVNHTWdLYy9ubXJaMTY0WApKMStJL1M5NkwzRWdOT0hNZmo4QjM5eEhZQ0ZUTzZEQ0pLQ3B0ZUdRa0gwTURHam84d3VoUlF6c0IzVExsdXN6ZG0xNmRZCk16WXZBSWR3emZ3bzh1ajFBSFFOendDYkIwRmR6bnFNOEpLV2ZrQzdFeVVrZUl4UXZmLzJGd1ZyS0xEZC95ak5PUmNoa3EKb2owNncySXFad0FBQThpS0tqT3dpaW96c0FBQUFBZHpjMmd0Y25OaEFBQUJBUURLeWM1VEZ6c29qNk1jUWIwUkRRQ29IWgpnVVJyMS9OaU1VMXhtTnhhbXZZOFVPeVNlSDBsS1l4WG1lQjZTYml2aXRRQTJaS0EvV1pndVAwdE8za1JpUUxEMGFzSWxuCnI1NEQzY3NuU1VWT05wMWNHY0d4K2Q4VTFCVnNhQ1BCSm53aUJVS1BZaXJncGNWK2IrV2F1a1UvNXVPUjdHNHVta2ZLOG4KcCtWaFhvVFNiQnBpREpJWXlBcHorZWF0blhyaGNuWDRqOUwzb3ZjU0EwNGN4K1B3SGYzRWRnSVZNN29NSWtvS20xNFpDUQpmUXdNYU9qekM2RkZET3dIZE11VzZ6TjJiWHAxZ3pOaThBaDNETi9Dank2UFVBZEEzUEFKc0hRVjNPZW96d2twWitRTHNUCkpTUjRqRkM5Ly9ZWEJXc29zTjMvS00wNUZ5R1NxaVBUckRZaXBuQUFBQUF3RUFBUUFBQVFFQXdRZzRqbitlb0kyYUJsdk4KVFYzRE1rUjViMU9uTG1DcUpEeGM1c2N4THZNWnNXbHBaN0NkVHk4ckJYTGhEZTdMcUo5QVVub0FHV1lwdTA1RW1vaFRpVwptVEFNVHJCdmYwd2xsdCtJZVdvVXo3bmFBbThQT1psb29MbXBYRzh5VmZKRU05aUo4NWtYNDY4SkF6VDRYZ1JXUFRYQ1JpCi9abCtuWUVUZVE4WTYzWlJhTVE3SUNmK2FRRWxRenBYb21idkxYM1RaNmNzTHh5Z3Eza01aSXNJU0lUcEk3Y0tsQVJ0Rm4KcWxKRitCL2JlUEJkZ3hIRVpqZDhDV0NIR1ZRUDh3Z3B0d0Rrak9NTzh2b2N4YVpOT0hZZnBwSlBCTkVjMEVKbmduN1BXSgorMVZSTWZKUW5SemVubmE3VHdSUSsrclZmdkVaRmhqamdSUk85RitrMUZvSWdRQUFBSUVBbFFybXRiV2V0d3RlWlZLLys4CklCUDZkcy9MSWtPb3pXRS9Wckx6cElBeHEvV1lFTW1QK24wK1dXdWRHNWpPaTFlZEJSYVFnU0owdTRxcE5JMXFGYTRISFYKY2oxL3pzenZ4RUtSRElhQkJGaU81Y3QvRVQvUTdwanozTnJaZVdtK0dlUUJKQ0diTEhSTlQ0M1ZpWVlLVG82ZGlGVTJteApHWENlLzFRY2NqNjVZQUFBQ0JBUHZodmgzb2Q1MmY4SFVWWGoxeDNlL1ZFenJPeVloTi9UQzNMbWhHYnRtdHZ0L0J2SUhxCndxWFpTT0lWWkZiRnVKSCtORHNWZFFIN29yUW1VcGJxRllDd0IxNUZNRGw0NVhLRm0xYjFyS1c1emVQK3d0M1hyM1p0cWsKRkdlaUlRMklSZklBQjZneElvNTZGemdMUmx6QnB0bzhkTlhjMXhtWVgyU2Rhb3ZwSkRBQUFBZ1FET0dwVE9oOEFRMFoxUwpzUm9vVS9YRTRkYWtrSU5vMDdHNGI3M01maG9xbkV1T01LM0ZRVStRRWUwYWpvdWs5UU1QNWJzZU1CYnJNZVNNUjBRWVBCClQ4Z0Z2S2VISWN6ZUtJTjNPRkRaRUF4TEZNMG9LbjR2bmdHTUFtTXUva2QwNm1PZnJUNDRmUUh1ajdGNWx1QVJHejRwYUwKLzRCTUVkMnFTRnFBYzZ6L0RRQUFBQTF0WVhSMGFFQk5ZWFIwYUdWM0FRSURCQT09Ci0tLS0tRU5EIE9QRU5TU0ggUFJJVkFURSBLRVktLS0tLQo="\n}}\n\nresource "octopusdeploy_tag_set" "tagset_tag1" {{\n  name        = "type with space"\n  description = "Test tagset"\n  sort_order  = 0\n}}\n\nresource "octopusdeploy_tag" "tag_a" {{\n  name        = "a with space"\n  color       = "#333333"\n  description = "tag a"\n  sort_order  = 2\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag" "tag_b" {{\n  name        = "b"\n  color       = "#333333"\n  description = "tag b"\n  sort_order  = 3\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag" "tag_excluded" {{\n  name        = "excluded"\n  color       = "#333333"\n  description = "excluded"\n  sort_order  = 4\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag" "tag_ignore" {{\n  name        = "ignorethis"\n  color       = "#333333"\n  description = "ignore this"\n  sort_order  = 5\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tenant" "tenant_team_a" {{\n  name        = "Team A"\n  description = "Test tenant"\n  tenant_tags = ["type with space/a with space", "type with space/b", "type with space/ignorethis"]\n  depends_on  = [octopusdeploy_tag.tag_a, octopusdeploy_tag.tag_b, octopusdeploy_tag.tag_ignore]\n}}\n\nresource "octopusdeploy_tenant_project" "tenanta_project" {{\n  environment_ids = [\n    octopusdeploy_environment.test_environment.id,\n    octopusdeploy_environment.development_environment.id,\n    octopusdeploy_environment.production_environment.id\n  ]\n  project_id = octopusdeploy_project.deploy_frontend_project.id\n  tenant_id = octopusdeploy_tenant.tenant_team_a.id\n}}\n\nresource "octopusdeploy_tenant" "tenant_excluded" {{\n  name        = "Excluded"\n  description = "Excluded tenant"\n  tenant_tags = ["type with space/excluded"]\n  depends_on  = [octopusdeploy_tag.tag_excluded]\n}}\n\nresource "octopusdeploy_tenant_project" "tenantexcluded_project" {{\n  environment_ids = [\n    octopusdeploy_environment.test_environment.id,\n    octopusdeploy_environment.development_environment.id,\n    octopusdeploy_environment.production_environment.id\n  ]\n  project_id = octopusdeploy_project.deploy_frontend_project.id\n  tenant_id = octopusdeploy_tenant.tenant_excluded.id\n}}\n\nresource "octopusdeploy_token_account" "account_autopilot_service_account" {{\n  description                       = "A test account"\n  name                              = "Token"\n  environments                      = null\n  tenants                           = null\n  tenanted_deployment_participation = "Tenanted"\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n  token                             = "secretgoeshere"\n}}\n\nresource "octopusdeploy_username_password_account" "account_gke" {{\n  description                       = "A test account"\n  name                              = "UsernamePasswordAccount"\n  environments                      = null\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n  tenanted_deployment_participation = "Tenanted"\n  tenants                           = null\n  username                          = "admin"\n  password                          = "secretgoeshere"\n}}\n\nresource "octopusdeploy_azure_web_app_deployment_target" "target_web_app" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "Web App"\n  roles                             = ["cloud"]\n  account_id                        = "${{octopusdeploy_azure_service_principal.account_sales_account.id}}"\n  resource_group_name               = "mattc-webapp"\n  web_app_name                      = "mattc-webapp"\n  health_status                     = "Unhealthy"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenanted_deployment_participation = "Tenanted"\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n  tenants                           = []\n  thumbprint                        = ""\n  web_app_slot_name                 = "slot1"\n# This doesn\'t work for setting the worker pool\n#  endpoint {{\n#    communication_style    = "AzureWebApp"\n#    default_worker_pool_id = octopusdeploy_static_worker_pool.workerpool_docker.id\n#  }}\n\n}}\nresource "octopusdeploy_azure_service_principal" "account_sales_account" {{\n  name                              = "Sales Account"\n  description                       = ""\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  application_id                    = "08a4a027-6f2a-4793-a0e5-e59a3c79189f"\n  password                          = "${{var.account_sales_account}}"\n  subscription_id                   = "3b50dcf4-f74d-442e-93cb-301b13e1e2d5"\n  tenant_id                         = "3d13e379-e666-469e-ac38-ec6fd61c1166"\n}}\nvariable "account_sales_account" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The Azure secret associated with the account Sales Account"\n}}\n###')]


async def get_all_file_content(tests, github_token, logging=None):
    contents_results = await asyncio.gather(
        *[get_file_content(test["name"], github_token, logging) for test in tests])
    return [content for content in contents_results if content and not isinstance(content, Exception)]


async def get_file_content(name, github_token, logging=None):
    try:
        test_files = await get_repo_contents("OctopusSolutionsEngineering", "OctopusTerraformExport",
                                             "test/terraform/" + name + "/space_population",
                                             github_token)
        test_files_contents = await asyncio.gather(
            *[get_repo_contents("OctopusSolutionsEngineering", "OctopusTerraformExport",
                                "test/terraform/" + name + "/space_population/" + test_file["name"],
                                github_token) for test_file in test_files], return_exceptions=True)

        contents = [decode_string_b64(test_file_content["content"]) for test_file_content in
                    test_files_contents if not isinstance(test_files_contents, Exception)]

        return ("system", "HCL: ###\n" + "\n\n".join(contents).replace("{", "{{").replace("}", "}}") + "\n###")
    except Exception as e:
        # Sometimes the directory structure might not match the assumptions, or the decode function
        # fails. We want to silently ignore these errors and continue with the next file.
        if logging:
            logging("Error:", str(e))
        return None
